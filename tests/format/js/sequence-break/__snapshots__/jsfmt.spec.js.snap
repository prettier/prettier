// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`break.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const f = (argument1, argument2, argument3) =>
  (doSomethingWithArgument(argument1), doSomethingWithArgument(argument2),argument1);
(function(){
	return aLongIdentifierName, aLongIdentifierName, aLongIdentifierName, aLongIdentifierName;
});
aLongIdentifierName, aLongIdentifierName, aLongIdentifierName, aLongIdentifierName;
a.then(() => (aLongIdentifierName, aLongIdentifierName, aLongIdentifierName, aLongIdentifierName));
for (aLongIdentifierName = 0, aLongIdentifierName = 0, aLongIdentifierName = 0, aLongIdentifierName = 0; test; update) {}
(a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; }),
  (a = b ? c : function() { return 0; });

=====================================output=====================================
const f = (argument1, argument2, argument3) => (
  doSomethingWithArgument(argument1),
  doSomethingWithArgument(argument2),
  argument1
);
(function () {
  return (
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName
  );
});
aLongIdentifierName,
  aLongIdentifierName,
  aLongIdentifierName,
  aLongIdentifierName;
a.then(
  () => (
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName,
    aLongIdentifierName
  )
);
for (
  aLongIdentifierName = 0,
    aLongIdentifierName = 0,
    aLongIdentifierName = 0,
    aLongIdentifierName = 0;
  test;
  update
) {}
(a = b
  ? c
  : function () {
      return 0;
    }),
  (a = b
    ? c
    : function () {
        return 0;
      }),
  (a = b
    ? c
    : function () {
        return 0;
      }),
  (a = b
    ? c
    : function () {
        return 0;
      }),
  (a = b
    ? c
    : function () {
        return 0;
      });

================================================================================
`;

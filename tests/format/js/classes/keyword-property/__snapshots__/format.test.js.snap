// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`async.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  async;
  foo() {};
}

class B {
  async = 1;
  foo() {}
}

=====================================output=====================================
class A {
  async
  foo() {}
}

class B {
  async = 1
  foo() {}
}

================================================================================
`;

exports[`async.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  async;
  foo() {};
}

class B {
  async = 1;
  foo() {}
}

=====================================output=====================================
class A {
  async;
  foo() {}
}

class B {
  async = 1;
  foo() {}
}

================================================================================
`;

exports[`computed.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class B {
  [get];
  foo() {}
}

class C {
  [set];
  foo(v) {}
}

=====================================output=====================================
class B {
  [get]
  foo() {}
}

class C {
  [set]
  foo(v) {}
}

================================================================================
`;

exports[`computed.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class B {
  [get];
  foo() {}
}

class C {
  [set];
  foo(v) {}
}

=====================================output=====================================
class B {
  [get];
  foo() {}
}

class C {
  [set];
  foo(v) {}
}

================================================================================
`;

exports[`get.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  get;
  foo() {}
}

class B {
  get = 1;
  foo() {}
}

=====================================output=====================================
class A {
  get;
  foo() {}
}

class B {
  get = 1
  foo() {}
}

================================================================================
`;

exports[`get.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  get;
  foo() {}
}

class B {
  get = 1;
  foo() {}
}

=====================================output=====================================
class A {
  get;
  foo() {}
}

class B {
  get = 1;
  foo() {}
}

================================================================================
`;

exports[`private.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  #static;
  foo() {}
}

class B {
  #get;
  foo() {}
}

class C {
  #set;
  foo(v) {}
}

=====================================output=====================================
class A {
  #static
  foo() {}
}

class B {
  #get
  foo() {}
}

class C {
  #set
  foo(v) {}
}

================================================================================
`;

exports[`private.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  #static;
  foo() {}
}

class B {
  #get;
  foo() {}
}

class C {
  #set;
  foo(v) {}
}

=====================================output=====================================
class A {
  #static;
  foo() {}
}

class B {
  #get;
  foo() {}
}

class C {
  #set;
  foo(v) {}
}

================================================================================
`;

exports[`set.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  set;
  foo(v) {}
}

class B {
  set = 1;
  foo(v) {}
}

=====================================output=====================================
class A {
  set;
  foo(v) {}
}

class B {
  set = 1
  foo(v) {}
}

================================================================================
`;

exports[`set.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  set;
  foo(v) {}
}

class B {
  set = 1;
  foo(v) {}
}

=====================================output=====================================
class A {
  set;
  foo(v) {}
}

class B {
  set = 1;
  foo(v) {}
}

================================================================================
`;

exports[`static.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  static;
  foo() {};
}

class B {
  static = 1;
  foo() {};
}

=====================================output=====================================
class A {
  static;
  foo() {}
}

class B {
  static = 1
  foo() {}
}

================================================================================
`;

exports[`static.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  static;
  foo() {};
}

class B {
  static = 1;
  foo() {};
}

=====================================output=====================================
class A {
  static;
  foo() {}
}

class B {
  static = 1;
  foo() {}
}

================================================================================
`;

exports[`static-async.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  static async;
  foo() {}
}

class B {
  static async = 1;
  foo() {}
}

=====================================output=====================================
class A {
  static async
  foo() {}
}

class B {
  static async = 1
  foo() {}
}

================================================================================
`;

exports[`static-async.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  static async;
  foo() {}
}

class B {
  static async = 1;
  foo() {}
}

=====================================output=====================================
class A {
  static async;
  foo() {}
}

class B {
  static async = 1;
  foo() {}
}

================================================================================
`;

exports[`static-get.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  static get;
  foo() {}
}

class B {
  static get = 1;
  foo() {}
}

=====================================output=====================================
class A {
  static get;
  foo() {}
}

class B {
  static get = 1
  foo() {}
}

================================================================================
`;

exports[`static-get.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  static get;
  foo() {}
}

class B {
  static get = 1;
  foo() {}
}

=====================================output=====================================
class A {
  static get;
  foo() {}
}

class B {
  static get = 1;
  foo() {}
}

================================================================================
`;

exports[`static-set.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  static set;
  foo(v) {}
}

class B {
  static set = 1;
  foo(v) {}
}

=====================================output=====================================
class A {
  static set;
  foo(v) {}
}

class B {
  static set = 1
  foo(v) {}
}

================================================================================
`;

exports[`static-set.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  static set;
  foo(v) {}
}

class B {
  static set = 1;
  foo(v) {}
}

=====================================output=====================================
class A {
  static set;
  foo(v) {}
}

class B {
  static set = 1;
  foo(v) {}
}

================================================================================
`;

exports[`static-static.js - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class A {
  static static;
  foo() {}
}

class B {
  static static = 1;
  foo() {}
}

=====================================output=====================================
class A {
  static static;
  foo() {}
}

class B {
  static static = 1
  foo() {}
}

================================================================================
`;

exports[`static-static.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class A {
  static static;
  foo() {}
}

class B {
  static static = 1;
  foo() {}
}

=====================================output=====================================
class A {
  static static;
  foo() {}
}

class B {
  static static = 1;
  foo() {}
}

================================================================================
`;

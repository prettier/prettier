// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`array.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 16
rangeStart: 8
     |                                                                                | printWidth
=====================================input======================================
  1 | a = [
  2 | ,
> 3 | ,,,,
    | ^^^^
> 4 |
    | ^
> 5 | ,
    | ^
> 6 |
    | ^
  7 | ,
  8 | a,
  9 | ]
=====================================output=====================================
a = [, , , , , , , a];
================================================================================
`;

exports[`boundary.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 26
rangeStart: 13
     |                                                                                | printWidth
=====================================input======================================
> 1 | foo = 1.0000;bar = 1.0000;baz=1.0000;
    |              ^^^^^^^^^^^^^
  2 | // The range will be 13~26
  3 | // \`foo\` ends at 13, should not format
  4 | // \`bar\` ends at 26, should format
  5 |
=====================================output=====================================
foo = 1.0000;bar = 1.0;baz=1.0000;
// The range will be 13~26
// \`foo\` ends at 13, should not format
// \`bar\` ends at 26, should format

================================================================================
`;

exports[`boundary-2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 45
rangeStart: 28
      |                                                                                | printWidth
=====================================input======================================
   1 | function a(
   2 | ){
   3 | a (
   4 | );
   5 | b (
>  6 | );                 c (
     |   ^^^^^^^^^^^^^^^^^
   7 | ); d(
   8 | );
   9 |
  10 | }
  11 |
=====================================output=====================================
function a(
){
  a();
  b();
  c();
  d();
}

================================================================================
`;

exports[`boundary-3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 30
rangeStart: 13
     |                                                                                | printWidth
=====================================input======================================
  1 | a (
  2 | );
  3 | b (
> 4 | );                 c (
    |   ^^^^^^^^^^^^^^^^^
  5 | ); d(
  6 | );
  7 |
=====================================output=====================================
a (
);
b (
);                 c (
); d(
);

================================================================================
`;

exports[`class-declaration.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 26
rangeStart: 10
     |                                                                                | printWidth
=====================================input======================================
  1 |
  2 |
> 3 | class    a {
    |         ^^^^
> 4 |   b(   ) {}
    | ^^^^^^^^^^^
  5 | }
  6 |
  7 | let    x
=====================================output=====================================


class a {
  b() {}
}

let    x
================================================================================
`;

exports[`different-levels.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 48
rangeStart: 19
     |                                                                                | printWidth
=====================================input======================================
  1 | call(1,2,3)
> 2 | call(1,2,3)
    |        ^^^^
> 3 | function f() {
    | ^^^^^^^^^^^^^^
> 4 |   call(1,2,3)
    | ^^^^^^^^^
  5 | }
  6 |
=====================================output=====================================
call(1,2,3)
call(1, 2, 3);
function f() {
  call(1, 2, 3);
}

================================================================================
`;

exports[`directive.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 1
rangeStart: 0
     |                                                                                | printWidth
=====================================input======================================
> 1 | 'aaa';
    | ^
  2 | 'bbb';
  3 |
=====================================output=====================================
"aaa";
'bbb';

================================================================================
`;

exports[`function-declaration.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 43
rangeStart: 16
     |                                                                                | printWidth
=====================================input======================================
> 1 | function ugly ( {a=1,     b     =   2     }      ) {}
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  2 |
=====================================output=====================================
function ugly({ a = 1, b = 2 }) {}

================================================================================
`;

exports[`ignore-indentation.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 225
rangeStart: 222
     |                                                                                | printWidth
=====================================input======================================
  1 | function ugly ( {a=1,     b     =   2     }      ) {
  2 |   function ugly ( {a=1,     b     =   2     }      ) {
  3 |     function ugly ( {a=1,     b     =   2     }      ) {
  4 |   	  	     \`multiline template string
> 5 |               with too much indentation\`
    |                    ^^^
  6 |     }
  7 |   }
  8 | }
  9 |
=====================================output=====================================
function ugly ( {a=1,     b     =   2     }      ) {
  function ugly ( {a=1,     b     =   2     }      ) {
    function ugly ( {a=1,     b     =   2     }      ) {
  	  	     \`multiline template string
              with too much indentation\`;
    }
  }
}

================================================================================
`;

exports[`issue-3789-1.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 31
rangeStart: 17
      |                                                                                | printWidth
=====================================input======================================
   1 | export class F {
>  2 |   reformatThis() {
     | ^^^^^^^^^^^^^^
   3 |     return 1;
   4 |   }
   5 |
   6 |   dontTouchThis(){
   7 |     return 2    ;
   8 |   }
   9 | }
  10 |
=====================================output=====================================
export class F {
  reformatThis() {
    return 1;
  }

  dontTouchThis() {
    return 2;
  }
}

================================================================================
`;

exports[`issue-3789-2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 18
rangeStart: 17
      |                                                                                | printWidth
=====================================input======================================
   1 | export class F {
>  2 |   reformatThis() {
     | ^
   3 |     return 1;
   4 |   }
   5 |
   6 |   dontTouchThis(){
   7 |     return 2    ;
   8 |   }
   9 | }
  10 |
=====================================output=====================================
export class F {
  reformatThis() {
    return 1;
  }

  dontTouchThis() {
    return 2;
  }
}

================================================================================
`;

exports[`issue-4206-1.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 30
rangeStart: 16
     |                                                                                | printWidth
=====================================input======================================
> 1 | export default class Foo{
    |                 ^^^^^^^^^
> 2 | /**/
    | ^^^^
  3 | }
  4 |
=====================================output=====================================
export default class Foo {
  /**/
}

================================================================================
`;

exports[`issue-4206-2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 30
rangeStart: 16
     |                                                                                | printWidth
=====================================input======================================
> 1 | export default function Foo(){
    |                 ^^^^^^^^^^^^^^
  2 | /**/
  3 | }
  4 |
=====================================output=====================================
export default function Foo() {
  /**/
}

================================================================================
`;

exports[`issue-4206-3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 28
rangeStart: 16
     |                                                                                | printWidth
=====================================input======================================
> 1 | /* */ function Foo(){
    |                 ^^^^^
> 2 | /**/
    | ^^^^
> 3 | }
    | ^
  4 |
=====================================output=====================================
/* */ function Foo() {
  /**/
}

================================================================================
`;

exports[`issue-4206-4.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 23
rangeStart: 17
     |                                                                                | printWidth
=====================================input======================================
  1 | /* */ class Foo{
> 2 | /**/
    | ^^^^
> 3 | }
    | ^
  4 |
=====================================output=====================================
/* */ class Foo {
  /**/
}

================================================================================
`;

exports[`issue-7082.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 42
rangeStart: 29
     |                                                                                | printWidth
=====================================input======================================
> 1 | export const Button = styled.button\`
    |                              ^^^^^^^
> 2 | color: blue;
    | ^^^^^
  3 | \`;
  4 |
=====================================output=====================================
export const Button = styled.button\`
  color: blue;
\`;

================================================================================
`;

exports[`large-dict.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 155
rangeStart: 80
     |                                                                                | printWidth
=====================================input======================================
  1 | function ugly() {
  2 |   const dictWithSeveralEntries = {
  3 |     key:          "value",
> 4 |     anotherKey:   "another value",
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 5 |     firstNumber:  1,
    | ^^^^^^^^^^^^^^^^^^^^
> 6 |     secondNumber: 2
    | ^^^^^^^^^^^^^^^^^^^
  7 |   };
  8 | }
  9 |
=====================================output=====================================
function ugly() {
  const dictWithSeveralEntries = {
    key: "value",
    anotherKey: "another value",
    firstNumber: 1,
    secondNumber: 2,
  };
}

================================================================================
`;

exports[`module-export1.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 56
rangeStart: 45
      |                                                                                | printWidth
=====================================input======================================
   1 | import  def , {named}  from    'x'
   2 |
>  3 | export *  from   'd'
     |          ^^^^^^^^^^^
   4 |
   5 | export    const  x
   6 |   =  42
   7 |
   8 | export   default    42
   9 |
  10 |
=====================================output=====================================
import  def , {named}  from    'x'

export * from "d";

export    const  x
  =  42

export   default    42


================================================================================
`;

exports[`module-export2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 79
rangeStart: 57
      |                                                                                | printWidth
=====================================input======================================
   1 | import  def , {named}  from    'x'
   2 |
   3 | export *  from   'd'
>  4 |
     | ^
>  5 | export    const  x
     | ^^^^^^^^^^^^^^^^^^
>  6 |   =  42
     | ^^
   7 |
   8 | export   default    42
   9 |
  10 |
=====================================output=====================================
import  def , {named}  from    'x'

export *  from   'd'

export const x = 42;

export   default    42


================================================================================
`;

exports[`module-export3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 108
rangeStart: 104
      |                                                                                | printWidth
=====================================input======================================
   1 | import  def , {named}  from    'x'
   2 |
   3 | export *  from   'd'
   4 |
   5 | export    const  x
   6 |   =  42
   7 |
>  8 | export   default    42
     |                   ^^^^
   9 |
  10 |
=====================================output=====================================
import  def , {named}  from    'x'

export *  from   'd'

export    const  x
  =  42

export default 42;


================================================================================
`;

exports[`module-import.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 22
rangeStart: 7
      |                                                                                | printWidth
=====================================input======================================
>  1 | import  def , {named}  from    'x'
     |        ^^^^^^^^^^^^^^^
   2 |
   3 | export *  from   'd'
   4 |
   5 | export    const  x
   6 |   =  42
   7 |
   8 | export   default    42
   9 |
  10 |
=====================================output=====================================
import def, { named } from "x";

export *  from   'd'

export    const  x
  =  42

export   default    42


================================================================================
`;

exports[`multiple-statements.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 49
rangeStart: 30
      |                                                                                | printWidth
=====================================input======================================
   1 | call(
   2 |   1, 2,3
   3 | );
   4 |
   5 | call(
>  6 |   1, 2,3
     |      ^^^
>  7 | );
     | ^^
>  8 |
     | ^^
>  9 | call(
     | ^^
> 10 |   1, 2,3
     | ^^^^^
  11 | );
  12 |
  13 | call(
  14 |   1, 2,3
  15 | );
  16 |
=====================================output=====================================
call(
  1, 2,3
);

call(1, 2, 3);

call(1, 2, 3);

call(
  1, 2,3
);

================================================================================
`;

exports[`multiple-statements2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 56
rangeStart: 18
      |                                                                                | printWidth
=====================================input======================================
   1 | call(
   2 |   1, 2,3
   3 | );
>  4 |
     | ^
>  5 | call(
     | ^^^^^
>  6 |   1, 2,3
     | ^^^^^
>  7 | );
     | ^^^^^
>  8 |
     | ^^^^^
>  9 | call(
     | ^^^^^
> 10 |   1, 2,3
     | ^^^^^
> 11 | );
     | ^^^^^
> 12 |
     | ^
  13 | call(
  14 |   1, 2,3
  15 | );
  16 |
=====================================output=====================================
call(
  1, 2,3
);

call(1, 2, 3);

call(1, 2, 3);

call(
  1, 2,3
);

================================================================================
`;

exports[`nested.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 37
rangeStart: 0
     |                                                                                | printWidth
=====================================input======================================
> 1 | try {
    | ^^^^^
> 2 |   if (condition) {
    | ^^^^^^^^^^^^^^^^^^
> 3 |     body
    | ^^^^^^^^^^^^^^^^^^
> 4 |   }
    | ^^^
  5 | }
  6 | catch (err) {}
  7 |
=====================================output=====================================
try {
  if (condition) {
    body;
  }
} catch (err) {}

================================================================================
`;

exports[`nested-print-width.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 110
rangeStart: 28
     |                                                                                | printWidth
=====================================input======================================
  1 | function f() {
> 2 |   if (true) {
    |              ^
> 3 |     call("this line is 79 chars", "long", "it should", "stay as single line");
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 4 |   }
    | ^^
  5 | }
  6 |
=====================================output=====================================
function f() {
  if (true) {
    call("this line is 79 chars", "long", "it should", "stay as single line");
  }
}

================================================================================
`;

exports[`nested2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 37
rangeStart: 9
     |                                                                                | printWidth
=====================================input======================================
  1 | try {
> 2 |   if (condition) {
    |    ^^^^^^^^^^^^^^^
> 3 |     body
    | ^^^^^^^^
> 4 |   }
    | ^^^
  5 | }
  6 | catch (err) {}
  7 |
=====================================output=====================================
try {
  if (condition) {
    body;
  }
}
catch (err) {}

================================================================================
`;

exports[`nested3.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 37
rangeStart: 9
     |                                                                                | printWidth
=====================================input======================================
  1 | try {
> 2 | 1;if (condition) {
    |    ^^^^^^^^^^^^^^^
> 3 |     body
    | ^^^^^^^^
> 4 |   }
    | ^^^
  5 | }
  6 | catch (err) {}
  7 |
=====================================output=====================================
try {
1;if (condition) {
  body;
}
}
catch (err) {}

================================================================================
`;

exports[`object-expression.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 14
rangeStart: 11
     |                                                                                | printWidth
=====================================input======================================
> 1 | const y = {a:1, b:2}
    |            ^^^
  2 |
=====================================output=====================================
const y = { a: 1, b: 2 };

================================================================================
`;

exports[`object-expression2.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 104
rangeStart: 53
      |                                                                                | printWidth
=====================================input======================================
   1 |
   2 | const y =       [
   3 |     {
   4 |                 a: 1,
>  5 |     },
     |       ^
>  6 |     {
     | ^^^^^
>  7 |               a: 1,
     | ^^^^^
>  8 |               b:2
     | ^^^^^
>  9 |     },
     | ^^^^^^
  10 | ]
  11 |
=====================================output=====================================

const y = [
  {
    a: 1,
  },
  {
    a: 1,
    b: 2,
  },
];

================================================================================
`;

exports[`range.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 227
rangeStart: 224
     |                                                                                | printWidth
=====================================input======================================
  1 | function ugly ( {a=1,     b     =   2     }      ) {
  2 |   function ugly ( {a=1,     b     =   2     }      ) {
  3 |     function ugly ( {a=1,     b     =   2     }      ) {
  4 |              \`multiline template string
> 5 |               with too much indentation\`
    |                    ^^^
  6 |     }
  7 |   }
  8 | }
  9 |
=====================================output=====================================
function ugly ( {a=1,     b     =   2     }      ) {
  function ugly ( {a=1,     b     =   2     }      ) {
    function ugly ( {a=1,     b     =   2     }      ) {
             \`multiline template string
              with too much indentation\`;
    }
  }
}

================================================================================
`;

exports[`range-end.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 50
rangeStart: 32
     |                                                                                | printWidth
=====================================input======================================
  1 | // Unchanged
  2 | call(
  3 |   1, 2,3
  4 | );
  5 |
> 6 |
    | ^
> 7 | call(
    | ^^^^^
> 8 |   1, 2,3
    | ^^^^^
> 9 | );
    | ^^
=====================================output=====================================
// Unchanged
call(
  1, 2,3
);


call(1, 2, 3);
================================================================================
`;

exports[`range-start.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 18
rangeStart: 0
      |                                                                                | printWidth
=====================================input======================================
>  1 | call(
     | ^^^^^
>  2 |   1, 2,3
     | ^^^^^^^^
>  3 | );
     | ^^^^^^^^
>  4 |
     | ^
   5 |
   6 | // Unchanged
   7 | call(
   8 |   1, 2,3
   9 | );
  10 |
=====================================output=====================================
call(1, 2, 3);


// Unchanged
call(
  1, 2,3
);

================================================================================
`;

exports[`reversed-range.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 13
rangeStart: 26
     |                                                                                | printWidth
=====================================input======================================
> 1 | foo = 1.0000;bar = 1.0000;baz=1.0000;
    |              ^^^^^^^^^^^^^ [Reversed range]
  2 | // The range will be 26~13, should not format anything
  3 |
=====================================output=====================================
foo = 1.0000;bar = 1.0000;baz=1.0000;
// The range will be 26~13, should not format anything

================================================================================
`;

exports[`start-equals-end.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 13
rangeStart: 13
     |                                                                                | printWidth
=====================================input======================================
> 1 | foo = 1.0000;bar = 1.0000;baz=1.0000;
    |              ^
  2 | // The range will be 13~13, should not format anything
  3 |
=====================================output=====================================
foo = 1.0000;bar = 1.0000;baz=1.0000;
// The range will be 13~13, should not format anything

================================================================================
`;

exports[`try-catch.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 8
rangeStart: 7
     |                                                                                | printWidth
=====================================input======================================
  1 | try {}
> 2 | catch (err) {}
    | ^
  3 |
=====================================output=====================================
try {
} catch (err) {}

================================================================================
`;

exports[`whitespace.js format 1`] = `
====================================options=====================================
parsers: ["babel", "flow", "typescript"]
printWidth: 80
rangeEnd: 1
rangeStart: 0
     |                                                                                | printWidth
=====================================input======================================
> 1 |  
    | ^
  2 |
=====================================output=====================================
 

================================================================================
`;

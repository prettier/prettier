// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classes.js [espree] format 1`] = `
"Unexpected character '@' (1:1)
> 1 | @deco class Foo {}
    | ^
  2 |
  3 | @deco export class Bar {}
  4 |"
`;

exports[`classes.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
@deco class Foo {}

@deco export class Bar {}

@deco export default class Baz {}

const foo = @deco class {
  //
};

const bar =
  @deco
  class {
    //
  };

=====================================output=====================================
@deco
class Foo {}

@deco
export class Bar {}

@deco
export default class Baz {}

const foo =
  @deco
  class {
    //
  };

const bar =
  @deco
  class {
    //
  };

================================================================================
`;

exports[`comments.js [espree] format 1`] = `
"Unexpected character '@' (3:1)
  1 | var x = 100
  2 |
> 3 | @Hello({
    | ^
  4 |   a: 'a', // Comment is in the wrong place
  5 |   // test
  6 |   b: '2'"
`;

exports[`comments.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
var x = 100

@Hello({
  a: 'a', // Comment is in the wrong place
  // test
  b: '2'
})
class X {

}


@NgModule({
  // Imports.
  imports: [
    // Angular modules.
    BrowserModule,

    // App modules.
    CoreModule,
    SharedModule,
  ],
})
export class AppModule {}

// A
@Foo()
// B
@Bar()
// C
export class Bar{}

=====================================output=====================================
var x = 100;

@Hello({
  a: "a", // Comment is in the wrong place
  // test
  b: "2",
})
class X {}

@NgModule({
  // Imports.
  imports: [
    // Angular modules.
    BrowserModule,

    // App modules.
    CoreModule,
    SharedModule,
  ],
})
export class AppModule {}

// A
@Foo()
// B
@Bar()
// C
export class Bar {}

================================================================================
`;

exports[`methods.js [espree] format 1`] = `
"Unexpected character '@' (3:3)
  1 |
  2 | class Yo {
> 3 |   @foo(\\"hello\\")
    |   ^
  4 |   async plop() {}
  5 |
  6 |   @anotherDecoratorWithALongName(\\"and a very long string as a first argument\\")"
`;

exports[`methods.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================

class Yo {
  @foo("hello")
  async plop() {}

  @anotherDecoratorWithALongName("and a very long string as a first argument")
  async plip() {}

  @anotherDecoratorWithALongName("another very long string, but now inline") async plip() {}
}

=====================================output=====================================
class Yo {
  @foo("hello")
  async plop() {}

  @anotherDecoratorWithALongName("and a very long string as a first argument")
  async plip() {}

  @anotherDecoratorWithALongName("another very long string, but now inline")
  async plip() {}
}

================================================================================
`;

exports[`mixed.js [espree] format 1`] = `
"Unexpected character '@' (3:1)
  1 | // https://github.com/prettier/prettier/issues/6747
  2 |
> 3 | @foo
    | ^
  4 | export default class MyComponent {
  5 |   @task
  6 |   *foo() {"
`;

exports[`mixed.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// https://github.com/prettier/prettier/issues/6747

@foo
export default class MyComponent {
  @task
  *foo() {
  }
}
=====================================output=====================================
// https://github.com/prettier/prettier/issues/6747

@foo
export default class MyComponent {
  @task
  *foo() {}
}

================================================================================
`;

exports[`mobx.js [espree] format 1`] = `
"Unexpected character '@' (3:1)
  1 | import {observable} from \\"mobx\\";
  2 |
> 3 | @observer class OrderLine {
    | ^
  4 |   @observable price:number = 0;
  5 |   @observable amount:number = 1;
  6 |"
`;

exports[`mobx.js [meriyah] format 1`] = `
"[4:20]: Unexpected token: ':' (4:20)
  2 |
  3 | @observer class OrderLine {
> 4 |   @observable price:number = 0;
    |                    ^
  5 |   @observable amount:number = 1;
  6 |
  7 |   constructor(price) {"
`;

exports[`mobx.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
import {observable} from "mobx";

@observer class OrderLine {
  @observable price:number = 0;
  @observable amount:number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }
  
  @computed @computed @computed @computed @computed @computed @computed get total() {
    return this.price * this.amount;
  }

  @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
  
  @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
}

=====================================output=====================================
import { observable } from "mobx";

@observer
class OrderLine {
  @observable price: number = 0;
  @observable amount: number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }

  @computed
  @computed
  @computed
  @computed
  @computed
  @computed
  @computed
  get total() {
    return this.price * this.amount;
  }

  @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) =>
    this.count--;

  @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) =>
    doSomething();
}

================================================================================
`;

exports[`multiline.js [espree] format 1`] = `
"Unexpected character '@' (2:3)
  1 | class Foo {
> 2 |   @deco([
    |   ^
  3 |     foo,
  4 |     bar
  5 |   ]) prop = value;"
`;

exports[`multiline.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class Foo {
  @deco([
    foo,
    bar
  ]) prop = value;

  @decorator([]) method() {}

  @decorator([
  ]) method() {}

  @decorator({}) method() {}

  @decorator({
  }) method() {}
}

=====================================output=====================================
class Foo {
  @deco([foo, bar]) prop = value;

  @decorator([]) method() {}

  @decorator([]) method() {}

  @decorator({}) method() {}

  @decorator({}) method() {}
}

================================================================================
`;

exports[`multiple.js [espree] format 1`] = `
"Unexpected character '@' (2:3)
  1 | const dog = {
> 2 |   @readonly
    |   ^
  3 |   @nonenumerable
  4 |   @doubledValue
  5 |   legs: 4,"
`;

exports[`multiple.js [meriyah] format 1`] = `
"[2:3]: Unexpected token: '@' (2:3)
  1 | const dog = {
> 2 |   @readonly
    |   ^
  3 |   @nonenumerable
  4 |   @doubledValue
  5 |   legs: 4,"
`;

exports[`multiple.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const dog = {
  @readonly
  @nonenumerable
  @doubledValue
  legs: 4,

  @readonly
  @nonenumerable
  @doubledValue
  eyes: 2
};

const foo = {
  @multipleDecorators @inline @theyWontAllFitInOneline aVeryLongPropName: "A very long string as value"
};

=====================================output=====================================
const dog = {
  @readonly
  @nonenumerable
  @doubledValue
  legs: 4,

  @readonly
  @nonenumerable
  @doubledValue
  eyes: 2,
};

const foo = {
  @multipleDecorators
  @inline
  @theyWontAllFitInOneline
  aVeryLongPropName: "A very long string as value",
};

================================================================================
`;

exports[`parens.js [espree] format 1`] = `
"Unexpected character '@' (2:3)
  1 | class X {
> 2 |   @(computed().volatile())
    |   ^
  3 |   x
  4 | }
  5 |"
`;

exports[`parens.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
class X {
  @(computed().volatile())
  x
}

=====================================output=====================================
class X {
  @(computed().volatile())
  x;
}

================================================================================
`;

exports[`redux.js [espree] format 1`] = `
"Unexpected character '@' (1:1)
> 1 | @connect(mapStateToProps, mapDispatchToProps)
    | ^
  2 | export class MyApp extends React.Component {}
  3 |
  4 | @connect(state => ({ todos: state.todos }))"
`;

exports[`redux.js format 1`] = `
====================================options=====================================
parsers: ["babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
@connect(mapStateToProps, mapDispatchToProps)
export class MyApp extends React.Component {}

@connect(state => ({ todos: state.todos }))
export class Home extends React.Component {}

=====================================output=====================================
@connect(mapStateToProps, mapDispatchToProps)
export class MyApp extends React.Component {}

@connect((state) => ({ todos: state.todos }))
export class Home extends React.Component {}

================================================================================
`;

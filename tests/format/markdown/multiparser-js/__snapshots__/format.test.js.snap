// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`9734.md - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["markdown"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
Markdown

\`\`\`js
"test"
\`\`\`

\`\`\`js
'test'
\`\`\`

\`\`\`js
\`test\`
\`\`\`

\`\`\`js
false
\`\`\`

\`\`\`js
true
\`\`\`

\`\`\`js
null
\`\`\`

\`\`\`js
[]
\`\`\`

\`\`\`js
{}
\`\`\`

\`\`\`js
5
\`\`\`

\`\`\`js
Infinity
\`\`\`

\`\`\`js
NaN
\`\`\`

\`\`\`js
undefined
\`\`\`

=====================================output=====================================
Markdown

\`\`\`js
"test";
\`\`\`

\`\`\`js
"test";
\`\`\`

\`\`\`js
\`test\`;
\`\`\`

\`\`\`js
false;
\`\`\`

\`\`\`js
true;
\`\`\`

\`\`\`js
null;
\`\`\`

\`\`\`js
[];
\`\`\`

\`\`\`js
{
}
\`\`\`

\`\`\`js
5;
\`\`\`

\`\`\`js
Infinity;
\`\`\`

\`\`\`js
NaN;
\`\`\`

\`\`\`js
undefined;
\`\`\`

================================================================================
`;

exports[`jsx-comment.md - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["markdown"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
\`\`\`jsx
const Foo = () => {
  return (
    <div>
      {/*
        This links to a page that does not yet exist.
      */}    
      <hr />
    </div>
  );
};
\`\`\`

=====================================output=====================================
\`\`\`jsx
const Foo = () => {
  return (
    <div>
      {/*
        This links to a page that does not yet exist.
      */}
      <hr />
    </div>
  );
};
\`\`\`

================================================================================
`;

exports[`meta-in-code-block.md - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["markdown"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
## plain js block

\`\`\`js    
console.log    (    "hello world"    );
\`\`\`

## js block with meta

\`\`\`js {cmd=node .line-numbers}
console.log    (    "hello world"    );
\`\`\`

## js block with meta but no space (the language should not be detected)

\`\`\`js{cmd=node .line-numbers}
console.log    (    "hello world"    );
\`\`\`

## js block with meta and extra spaces (only the first set of spaces should be changed)

\`\`\`js    cmd=node    something="a    b"
console.log    (    "hello world"    );
\`\`\`

=====================================output=====================================
## plain js block

\`\`\`js
console.log("hello world");
\`\`\`

## js block with meta

\`\`\`js {cmd=node .line-numbers}
console.log("hello world");
\`\`\`

## js block with meta but no space (the language should not be detected)

\`\`\`js{cmd=node .line-numbers}
console.log    (    "hello world"    );
\`\`\`

## js block with meta and extra spaces (only the first set of spaces should be changed)

\`\`\`js cmd=node    something="a    b"
console.log("hello world");
\`\`\`

================================================================================
`;

exports[`trailing-comma.md - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["markdown"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
### Some heading

\`\`\`js
someFunctionCall(
  foo,
  bar,
  foobar,
  sometehingReallyLongAndHairy,
  somethingElse,
  breakNow,
);
\`\`\`

=====================================output=====================================
### Some heading

\`\`\`js
someFunctionCall(
  foo,
  bar,
  foobar,
  sometehingReallyLongAndHairy,
  somethingElse,
  breakNow,
);
\`\`\`

================================================================================
`;

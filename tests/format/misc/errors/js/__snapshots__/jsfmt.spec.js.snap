// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`html-like-comments.js [babel] format 1`] = `
"Unexpected token (3:1)
  1 | // Only support HTML-like comment in HTML
  2 | alert(
> 3 | <!-- comment
    | ^
  4 | 'hello world'
  5 | )
  6 |"
`;

exports[`import-assertions-for-export-without-from.js [babel] format 1`] = `
"Missing semicolon. (1:15)
> 1 | export { foo } assert { type: \\"json\\" };
    |               ^
  2 |"
`;

exports[`import-assertions-with-parens.js [babel] format 1`] = `
"Unexpected token (1:19)
> 1 | import \\"x\\" assert ({type: 'json'});
    |                   ^
  2 |"
`;

exports[`invalid-escape-in-identifier.js [babel] format 1`] = `
"Invalid Unicode escape. (1:7)
> 1 | const \\\\u{20} = 1
    |       ^
  2 | const \\\\u{3000} = 1
  3 |"
`;

exports[`invalid-escape-in-identifier-2.js [babel] format 1`] = `
"Expecting Unicode escape sequence \\\\uXXXX. (1:3)
> 1 | a\\\\ = a
    |   ^
  2 |"
`;

exports[`module-attributes.js [babel] format 1`] = `
"Unexpected token, expected \\"(\\" (1:33)
> 1 | import foo from \\"foo.json\\" with type: \\"json\\";
    |                                 ^
  2 |"
`;

exports[`no-for-in-init-concise-binary-in.js [babel] format 1`] = `
"Unexpected token, expected \\")\\" (3:18)
  1 | // https://github.com/babel/babel/pull/11931
  2 |
> 3 | for (() => x in y;;);
    |                  ^
  4 |"
`;

exports[`partial-template-strings.js [babel] format 1`] = `
"Unexpected token (6:42)
  4 |
  5 | const Diagnostics = {
> 6 |   unexpected_token: \`Unexpected token: \${?}\`,
    |                                          ^
  7 |   name_not_found: \`'\${?}' not found.\`
  8 | };
  9 | Diagnostics.name_not_found(\\"foo\\"); // \\"'foo' not found.\\""
`;

exports[`snippet: #0 [babel] format 1`] = `
"Binding should be performed on object property. (1:3)
> 1 | ::%DebugPrint(null)
    |   ^"
`;

exports[`snippet: #1 [babel] format 1`] = `
"Unexpected token (1:3)
> 1 | a.%DebugPrint();
    |   ^"
`;

exports[`snippet: #2 [babel] format 1`] = `
"Unexpected token (1:11)
> 1 | const i = %DebugPrint;
    |           ^"
`;

exports[`snippet: #3 [babel] format 1`] = `
"Unexpected token (1:7)
> 1 | f(x + ?)
    |       ^"
`;

exports[`snippet: #4 [babel] format 1`] = `
"Unexpected token (1:5)
> 1 | x + ?
    |     ^"
`;

exports[`snippet: #5 [babel] format 1`] = `
"Unexpected token (1:1)
> 1 | ?.f()
    | ^"
`;

exports[`snippet: #6 [babel] format 1`] = `
"Unexpected token (5:12)
  3 |
  4 |   static isC(obj) {
> 5 |     return try obj.#brand;
    |            ^
  6 |   }
  7 | }"
`;

exports[`snippet: #7 [babel] format 1`] = `
"Unexpected token (1:7)
> 1 | const #{ a, b } = #{ a: 1, b: 2 };
    |       ^"
`;

exports[`snippet: #8 [babel] format 1`] = `
"Unexpected token (1:7)
> 1 | const #[a, b] = #[1, 2];
    |       ^"
`;

exports[`snippet: #9 [babel] format 1`] = `
"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'. (1:1)
> 1 | [| 1 |]
    | ^"
`;

exports[`snippet: #10 [babel] format 1`] = `
"Invalid decimal. (1:1)
> 1 | 0b101011101m;
    | ^"
`;

exports[`snippet: #11 [babel] format 1`] = `
"Invalid decimal. (1:1)
> 1 | 0x16432m;
    | ^"
`;

exports[`snippet: #12 [babel] format 1`] = `
"Invalid decimal. (1:1)
> 1 | 0o16432m;
    | ^"
`;

exports[`static-import-source-should-not-has-extra-token.js [babel] format 1`] = `
"Unexpected token (4:16)
  2 | // be parenthesized, that accidentally break #8016
  3 |
> 4 | import {} from (('a'));
    |                ^
  5 |"
`;

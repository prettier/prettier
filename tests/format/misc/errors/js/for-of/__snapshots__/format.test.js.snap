// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snippet: #0 [acorn] format 1`] = `
"Unexpected token (1:15)
> 1 | for (async of []);
    |               ^
Cause: Unexpected token (1:14)"
`;

exports[`snippet: #0 [babel] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let.foo of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #0 [babel] format 2`] = `
"The left-hand side of a for-of loop may not be 'async'. (1:6)
> 1 | for (async of []);
    |      ^
Cause: The left-hand side of a for-of loop may not be 'async'. (1:5)"
`;

exports[`snippet: #0 [babel-flow] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let.foo of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #0 [babel-flow] format 2`] = `
"The left-hand side of a for-of loop may not be 'async'. (1:6)
> 1 | for (async of []);
    |      ^
Cause: The left-hand side of a for-of loop may not be 'async'. (1:5)"
`;

exports[`snippet: #0 [babel-ts] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let.foo of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #0 [babel-ts] format 2`] = `
"The left-hand side of a for-of loop may not be 'async'. (1:6)
> 1 | for (async of []);
    |      ^
Cause: The left-hand side of a for-of loop may not be 'async'. (1:5)"
`;

exports[`snippet: #0 [espree] format 1`] = `
"The keyword 'let' is reserved (1:6)
> 1 | for (let.foo of []);
    |      ^
Cause: The keyword 'let' is reserved"
`;

exports[`snippet: #0 [espree] format 2`] = `
"Unexpected token [ (1:15)
> 1 | for (async of []);
    |               ^
Cause: Unexpected token ["
`;

exports[`snippet: #0 [flow] format 1`] = `
"Unexpected token \`.\`, expected an identifier (1:9)
> 1 | for (let.foo of []);
    |         ^"
`;

exports[`snippet: #0 [flow] format 2`] = `
"Invalid left-hand side in for-of (1:6)
> 1 | for (async of []);
    |      ^^^^^"
`;

exports[`snippet: #0 [meriyah] format 1`] = `
"Identifier "let" disallowed as left-hand side expression in strict mode (1:9)
> 1 | for (let.foo of []);
    |         ^
Cause: [1:8-1:9]: Identifier "let" disallowed as left-hand side expression in strict mode"
`;

exports[`snippet: #0 [typescript] format 1`] = `
"Variable declaration expected. (1:9)
> 1 | for (let.foo of []);
    |         ^
Cause: Variable declaration expected."
`;

exports[`snippet: #1 [babel] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let().bar of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #1 [babel-flow] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let().bar of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #1 [babel-ts] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let().bar of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #1 [espree] format 1`] = `
"The keyword 'let' is reserved (1:6)
> 1 | for (let().bar of []);
    |      ^
Cause: The keyword 'let' is reserved"
`;

exports[`snippet: #1 [flow] format 1`] = `
"Unexpected token \`(\`, expected an identifier (1:9)
> 1 | for (let().bar of []);
    |         ^"
`;

exports[`snippet: #1 [meriyah] format 1`] = `
"Identifier "let" disallowed as left-hand side expression in strict mode (1:9)
> 1 | for (let().bar of []);
    |         ^
Cause: [1:8-1:9]: Identifier "let" disallowed as left-hand side expression in strict mode"
`;

exports[`snippet: #1 [typescript] format 1`] = `
"Variable declaration expected. (1:9)
> 1 | for (let().bar of []);
    |         ^
Cause: Variable declaration expected."
`;

exports[`snippet: #2 [babel] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let\`\`.bar of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #2 [babel-flow] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let\`\`.bar of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #2 [babel-ts] format 1`] = `
"The left-hand side of a for-of loop may not start with 'let'. (1:6)
> 1 | for (let\`\`.bar of []);
    |      ^
Cause: The left-hand side of a for-of loop may not start with 'let'. (1:5)"
`;

exports[`snippet: #2 [espree] format 1`] = `
"The keyword 'let' is reserved (1:6)
> 1 | for (let\`\`.bar of []);
    |      ^
Cause: The keyword 'let' is reserved"
`;

exports[`snippet: #2 [flow] format 1`] = `
"Unexpected template literal part, expected an identifier (1:9)
> 1 | for (let\`\`.bar of []);
    |         ^^"
`;

exports[`snippet: #2 [meriyah] format 1`] = `
"Identifier "let" disallowed as left-hand side expression in strict mode (1:9)
> 1 | for (let\`\`.bar of []);
    |         ^^
Cause: [1:8-1:10]: Identifier "let" disallowed as left-hand side expression in strict mode"
`;

exports[`snippet: #2 [typescript] format 1`] = `
"Variable declaration expected. (1:9)
> 1 | for (let\`\`.bar of []);
    |         ^
Cause: Variable declaration expected."
`;

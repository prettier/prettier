// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snippet: #0 [acorn] format 1`] = `
"Cannot use keyword 'await' outside an async function (2:20)
  1 | async function foo() {
> 2 |   function bar(x = await 2) {}
    |                    ^
  3 | }
Cause: Cannot use keyword 'await' outside an async function (2:19)"
`;

exports[`snippet: #0 [acorn] format 2`] = `
"Await expression cannot be a default value (1:12)
> 1 | async (x = await (2)) => {};
    |            ^
Cause: Await expression cannot be a default value (1:11)"
`;

exports[`snippet: #0 [babel] format 1`] = `
"'await' is only allowed within async functions and at the top levels of modules. (2:20)
  1 | async function foo() {
> 2 |   function bar(x = await 2) {}
    |                    ^
  3 | }
Cause: 'await' is only allowed within async functions and at the top levels of modules. (2:19)"
`;

exports[`snippet: #0 [babel] format 2`] = `
"'await' is not allowed in async function parameters. (1:12)
> 1 | async (x = await (2)) => {};
    |            ^
Cause: 'await' is not allowed in async function parameters. (1:11)"
`;

exports[`snippet: #0 [espree] format 1`] = `
"Cannot use keyword 'await' outside an async function (2:20)
  1 | async function foo() {
> 2 |   function bar(x = await 2) {}
    |                    ^
  3 | }
Cause: Cannot use keyword 'await' outside an async function"
`;

exports[`snippet: #0 [espree] format 2`] = `
"Await expression cannot be a default value (1:12)
> 1 | async (x = await (2)) => {};
    |            ^
Cause: Await expression cannot be a default value"
`;

exports[`snippet: #0 [flow] format 1`] = `
"Unexpected number, expected the token \`,\` (2:26)
  1 | async function foo() {
> 2 |   function bar(x = await 2) {}
    |                          ^
  3 | }"
`;

exports[`snippet: #0 [flow] format 2`] = `
"\`await\` is not allowed in async function parameters. (1:12)
> 1 | async (x = await (2)) => {};
    |            ^^^^^"
`;

exports[`snippet: #0 [meriyah] format 1`] = `
"Await expression not allowed in formal parameter (2:20)
  1 | async function foo() {
> 2 |   function bar(x = await 2) {}
    |                    ^^^^^
  3 | }
Cause: [2:19-2:24]: Await expression not allowed in formal parameter"
`;

exports[`snippet: #1 [acorn] format 1`] = `
"Await expression cannot be a default value (1:12)
> 1 | async (x = await 2) => {};
    |            ^
Cause: Await expression cannot be a default value (1:11)"
`;

exports[`snippet: #1 [babel] format 1`] = `
"'await' is not allowed in async function parameters. (1:12)
> 1 | async (x = await 2) => {};
    |            ^
Cause: 'await' is not allowed in async function parameters. (1:11)"
`;

exports[`snippet: #1 [espree] format 1`] = `
"Await expression cannot be a default value (1:12)
> 1 | async (x = await 2) => {};
    |            ^
Cause: Await expression cannot be a default value"
`;

exports[`snippet: #1 [flow] format 1`] = `
"\`await\` is not allowed in async function parameters. (1:12)
> 1 | async (x = await 2) => {};
    |            ^^^^^"
`;

exports[`snippet: #1 [meriyah] format 1`] = `
"Await expression not allowed in formal parameter (1:21)
> 1 | async (x = await 2) => {};
    |                     ^^
Cause: [1:20-1:22]: Await expression not allowed in formal parameter"
`;

exports[`snippet: #2 [acorn] format 1`] = `
"Unexpected token (1:25)
> 1 | f = async (a) => await a! ** 6;
    |                         ^
Cause: Unexpected token (1:24)"
`;

exports[`snippet: #2 [babel] format 1`] = `
"Unexpected token (1:27)
> 1 | f = async (a) => await a! ** 6;
    |                           ^
Cause: Unexpected token (1:26)"
`;

exports[`snippet: #2 [espree] format 1`] = `
"Unexpected token ! (1:25)
> 1 | f = async (a) => await a! ** 6;
    |                         ^
Cause: Unexpected token !"
`;

exports[`snippet: #2 [flow] format 1`] = `
"Unexpected token \`!\`, expected the end of an expression statement (\`;\`) (1:25)
> 1 | f = async (a) => await a! ** 6;
    |                         ^"
`;

exports[`snippet: #2 [meriyah] format 1`] = `
"Unexpected token: '!' (1:25)
> 1 | f = async (a) => await a! ** 6;
    |                         ^
Cause: [1:24-1:25]: Unexpected token: '!'"
`;

exports[`snippet: #3 [acorn] format 1`] = `
"Unexpected token (1:14)
> 1 | f = (a) => +a! ** 6;
    |              ^
Cause: Unexpected token (1:13)"
`;

exports[`snippet: #3 [babel] format 1`] = `
"Unexpected token (1:16)
> 1 | f = (a) => +a! ** 6;
    |                ^
Cause: Unexpected token (1:15)"
`;

exports[`snippet: #3 [espree] format 1`] = `
"Unexpected token ! (1:14)
> 1 | f = (a) => +a! ** 6;
    |              ^
Cause: Unexpected token !"
`;

exports[`snippet: #3 [flow] format 1`] = `
"Unexpected token \`!\`, expected the end of an expression statement (\`;\`) (1:14)
> 1 | f = (a) => +a! ** 6;
    |              ^"
`;

exports[`snippet: #3 [meriyah] format 1`] = `
"Unexpected token: '!' (1:14)
> 1 | f = (a) => +a! ** 6;
    |              ^
Cause: [1:13-1:14]: Unexpected token: '!'"
`;

exports[`snippet: #4 [acorn] format 1`] = `
"Unexpected token (1:22)
> 1 | async (a) => (await a!) ** 6;
    |                      ^
Cause: Unexpected token (1:21)"
`;

exports[`snippet: #4 [babel] format 1`] = `
"Unexpected token, expected "," (1:22)
> 1 | async (a) => (await a!) ** 6;
    |                      ^
Cause: Unexpected token, expected "," (1:21)"
`;

exports[`snippet: #4 [espree] format 1`] = `
"Unexpected token ! (1:22)
> 1 | async (a) => (await a!) ** 6;
    |                      ^
Cause: Unexpected token !"
`;

exports[`snippet: #4 [flow] format 1`] = `
"Unexpected token \`!\`, expected the token \`)\` (1:22)
> 1 | async (a) => (await a!) ** 6;
    |                      ^"
`;

exports[`snippet: #4 [meriyah] format 1`] = `
"Expected ')' (1:22)
> 1 | async (a) => (await a!) ** 6;
    |                      ^
Cause: [1:21-1:22]: Expected ')'"
`;

exports[`snippet: #5 [acorn] format 1`] = `
"Unexpected token (1:6)
> 1 | (-+5 ** 6);
    |      ^
Cause: Unexpected token (1:5)"
`;

exports[`snippet: #5 [babel] format 1`] = `
"Illegal expression. Wrap left hand side or entire exponentiation in parentheses. (1:3)
> 1 | (-+5 ** 6);
    |   ^
Cause: Illegal expression. Wrap left hand side or entire exponentiation in parentheses. (1:2)"
`;

exports[`snippet: #5 [espree] format 1`] = `
"Unexpected token ** (1:6)
> 1 | (-+5 ** 6);
    |      ^
Cause: Unexpected token **"
`;

exports[`snippet: #5 [flow] format 1`] = `
"Invalid left-hand side in exponentiation expression (1:2)
> 1 | (-+5 ** 6);
    |  ^^^"
`;

exports[`snippet: #5 [meriyah] format 1`] = `
"Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:6)
> 1 | (-+5 ** 6);
    |      ^^
Cause: [1:5-1:7]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses"
`;

exports[`snippet: #6 [acorn] format 1`] = `
"Unexpected token (1:25)
> 1 | f = async () => await 5 ** 6;
    |                         ^
Cause: Unexpected token (1:24)"
`;

exports[`snippet: #6 [babel] format 1`] = `
"Illegal expression. Wrap left hand side or entire exponentiation in parentheses. (1:23)
> 1 | f = async () => await 5 ** 6;
    |                       ^
Cause: Illegal expression. Wrap left hand side or entire exponentiation in parentheses. (1:22)"
`;

exports[`snippet: #6 [espree] format 1`] = `
"Unexpected token ** (1:25)
> 1 | f = async () => await 5 ** 6;
    |                         ^
Cause: Unexpected token **"
`;

exports[`snippet: #6 [flow] format 1`] = `
"Invalid left-hand side in exponentiation expression (1:17)
> 1 | f = async () => await 5 ** 6;
    |                 ^^^^^^^"
`;

exports[`snippet: #6 [meriyah] format 1`] = `
"Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:25)
> 1 | f = async () => await 5 ** 6;
    |                         ^^
Cause: [1:24-1:26]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses"
`;

exports[`snippet: #7 [acorn] format 1`] = `
"Unexpected token (1:26)
> 1 | f = async () => await -5 ** 6;
    |                          ^
Cause: Unexpected token (1:25)"
`;

exports[`snippet: #7 [babel] format 1`] = `
"Illegal expression. Wrap left hand side or entire exponentiation in parentheses. (1:23)
> 1 | f = async () => await -5 ** 6;
    |                       ^
Cause: Illegal expression. Wrap left hand side or entire exponentiation in parentheses. (1:22)"
`;

exports[`snippet: #7 [espree] format 1`] = `
"Unexpected token ** (1:26)
> 1 | f = async () => await -5 ** 6;
    |                          ^
Cause: Unexpected token **"
`;

exports[`snippet: #7 [flow] format 1`] = `
"Invalid left-hand side in exponentiation expression (1:17)
> 1 | f = async () => await -5 ** 6;
    |                 ^^^^^^^^"
`;

exports[`snippet: #7 [meriyah] format 1`] = `
"Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses (1:26)
> 1 | f = async () => await -5 ** 6;
    |                          ^^
Cause: [1:25-1:27]: Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses"
`;

exports[`snippet: #8 [acorn] format 1`] = `
"Shorthand property assignments are valid only in destructuring patterns (1:15)
> 1 | async({ foo33 = 1 });
    |               ^
Cause: Shorthand property assignments are valid only in destructuring patterns (1:14)"
`;

exports[`snippet: #8 [babel] format 1`] = `
"Invalid shorthand property initializer. (1:15)
> 1 | async({ foo33 = 1 });
    |               ^
Cause: Invalid shorthand property initializer. (1:14)"
`;

exports[`snippet: #8 [espree] format 1`] = `
"Shorthand property assignments are valid only in destructuring patterns (1:15)
> 1 | async({ foo33 = 1 });
    |               ^
Cause: Shorthand property assignments are valid only in destructuring patterns"
`;

exports[`snippet: #8 [flow] format 1`] = `
"Unexpected token \`=\` (1:15)
> 1 | async({ foo33 = 1 });
    |               ^"
`;

exports[`snippet: #8 [meriyah] format 1`] = `
"Invalid shorthand property initializer (1:21)
> 1 | async({ foo33 = 1 });
    |                     ^
Cause: [1:20-1:21]: Invalid shorthand property initializer"
`;

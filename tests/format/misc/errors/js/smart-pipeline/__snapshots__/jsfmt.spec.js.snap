// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snippet: #0 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> (yield y)}
    |                                       ^"
`;

exports[`snippet: #1 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> (yield)}
    |                                       ^"
`;

exports[`snippet: #2 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> (await y)}
    |                                       ^"
`;

exports[`snippet: #3 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> (a?.b)}
    |                                       ^"
`;

exports[`snippet: #4 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> a?.b}
    |                                       ^"
`;

exports[`snippet: #5 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> (a.b())}
    |                                       ^"
`;

exports[`snippet: #6 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> a.b()}
    |                                       ^"
`;

exports[`snippet: #7 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> (a.b?.())}
    |                                       ^"
`;

exports[`snippet: #8 [babel] format 1`] = `
"Pipeline is in topic style but does not use topic reference. (1:39)
> 1 | async function * a() { a |> foo(#) |> a.b?.()}
    |                                       ^"
`;

exports[`snippet: #9 [babel] format 1`] = `
"Can not use 'yield' as identifier inside a generator. (1:39)
> 1 | async function * a() { a |> foo(#) |> yield}
    |                                       ^"
`;

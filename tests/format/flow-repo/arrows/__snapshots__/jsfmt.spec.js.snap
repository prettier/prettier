// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`advanced_arrows.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/**
 * @flow
 */

var add = (x: number, y: number): number => x + y;

var bad = (x: number): string => x; // Error!

var ident = <T>(x: T): T => x;
(ident(1): number);
(ident("hi"): number); // Error

=====================================output=====================================
/**
 * @flow
 */

var add = (x: number, y: number): number => x + y;

var bad = (x: number): string => x; // Error!

var ident = <T>(x: T): T => x;
(ident(1): number);
(ident("hi"): number); // Error

================================================================================
`;

exports[`arrows.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
function selectBestEffortImageForWidth(
    maxWidth: number,
    images: Array<Image>
): Image {
    var maxPixelWidth = maxWidth;
    //images = images.sort(function (a, b) { return a.width - b.width });
    images = images.sort((a, b) => (a.width - b.width) + "");
    return images.find(image => image.width >= maxPixelWidth) ||
        images[images.length - 1];
}

=====================================output=====================================
function selectBestEffortImageForWidth(
  maxWidth: number,
  images: Array<Image>
): Image {
  var maxPixelWidth = maxWidth;
  //images = images.sort(function (a, b) { return a.width - b.width });
  images = images.sort((a, b) => a.width - b.width + "");
  return (
    images.find((image) => image.width >= maxPixelWidth) ||
    images[images.length - 1]
  );
}

================================================================================
`;

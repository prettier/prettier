// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`client.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
var ns = require('./namespace')

var bar: string = ns.foo

=====================================output=====================================
var ns = require("./namespace");

var bar: string = ns.foo;

================================================================================
`;

exports[`namespace.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
/*@flow*/// import type { T } from '...'
type T = (x:number) => void;
var f: T = function(x:string): void { }

type Map<X,Y> = (x:X) => Y;

function bar<U,V>(x:U, f:Map<U,V>): V {
    return f(x);
}

var y:number = bar(0, x => "");

type Seq = number | Array<Seq>;
var s1:Seq = [0,[0]];
var s2:Seq = [[""]];

module.exports = { foo: ("": number) };

=====================================output=====================================
/*@flow*/ // import type { T } from '...'
type T = (x: number) => void;
var f: T = function (x: string): void {};

type Map<X, Y> = (x: X) => Y;

function bar<U, V>(x: U, f: Map<U, V>): V {
  return f(x);
}

var y: number = bar(0, (x) => "");

type Seq = number | Array<Seq>;
var s1: Seq = [0, [0]];
var s2: Seq = [[""]];

module.exports = { foo: ("": number) };

================================================================================
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sfc-blocks.vue - {"singleAttributePerLine":true} format 1`] = `
====================================options=====================================
parsers: ["vue"]
printWidth: 80
singleAttributePerLine: true
                                                                                | printWidth
=====================================input======================================
<script setup lang="ts">
console.log("hello")
</script>

<style scoped lang="scss">
p {
  color: red;
}
</style>

<unknown-block foo bar="bar" baz long_long_long_long_attribute></unknown-block>

<script lang="ts" src="./long_long_long_long_long_long_file_path.ts">
</script>

<script lang="ts" src="./long_long_long_long_long_long_long_file_path.ts">
</script>

<script lang="ts" src="./short">
</script>

<template lang="pug" src="./long_long_long_long_long_long_file_path.pug">
</template>

<template lang="pug" src="./long_long_long_long_long_long_long_long_file_path.pug">
</template>

<template lang="pug" src="./short">
</template>

=====================================output=====================================
<script setup lang="ts">
console.log("hello");
</script>

<style scoped lang="scss">
p {
  color: red;
}
</style>

<unknown-block foo bar="bar" baz long_long_long_long_attribute></unknown-block>

<script lang="ts" src="./long_long_long_long_long_long_file_path.ts"></script>

<script
  lang="ts"
  src="./long_long_long_long_long_long_long_file_path.ts"
></script>

<script lang="ts" src="./short"></script>

<template lang="pug" src="./long_long_long_long_long_long_file_path.pug">
</template>

<template
  lang="pug"
  src="./long_long_long_long_long_long_long_long_file_path.pug"
>
</template>

<template lang="pug" src="./short">
</template>

================================================================================
`;

exports[`sfc-blocks.vue format 1`] = `
====================================options=====================================
parsers: ["vue"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<script setup lang="ts">
console.log("hello")
</script>

<style scoped lang="scss">
p {
  color: red;
}
</style>

<unknown-block foo bar="bar" baz long_long_long_long_attribute></unknown-block>

<script lang="ts" src="./long_long_long_long_long_long_file_path.ts">
</script>

<script lang="ts" src="./long_long_long_long_long_long_long_file_path.ts">
</script>

<script lang="ts" src="./short">
</script>

<template lang="pug" src="./long_long_long_long_long_long_file_path.pug">
</template>

<template lang="pug" src="./long_long_long_long_long_long_long_long_file_path.pug">
</template>

<template lang="pug" src="./short">
</template>

=====================================output=====================================
<script setup lang="ts">
console.log("hello");
</script>

<style scoped lang="scss">
p {
  color: red;
}
</style>

<unknown-block foo bar="bar" baz long_long_long_long_attribute></unknown-block>

<script lang="ts" src="./long_long_long_long_long_long_file_path.ts"></script>

<script
  lang="ts"
  src="./long_long_long_long_long_long_long_file_path.ts"
></script>

<script lang="ts" src="./short"></script>

<template lang="pug" src="./long_long_long_long_long_long_file_path.pug">
</template>

<template
  lang="pug"
  src="./long_long_long_long_long_long_long_long_file_path.pug"
>
</template>

<template lang="pug" src="./short">
</template>

================================================================================
`;

exports[`single-attribute-per-line.vue - {"singleAttributePerLine":true} format 1`] = `
====================================options=====================================
parsers: ["vue"]
printWidth: 80
singleAttributePerLine: true
                                                                                | printWidth
=====================================input======================================
<template>
  <div data-a="1">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div data-a="1" data-b="2" data-c="3">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div data-a="Lorem ipsum dolor sit amet" data-b="Lorem ipsum dolor sit amet" data-c="Lorem ipsum dolor sit amet">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div data-long-attribute-a="1" data-long-attribute-b="2" data-long-attribute-c="3">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <img src="/images/foo.png" />

  <img src="/images/foo.png" alt="bar" />

  <img src="/images/foo.png" alt="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
</template>

=====================================output=====================================
<template>
  <div data-a="1">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>

  <div
    data-a="1"
    data-b="2"
    data-c="3"
  >
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div
    data-a="Lorem ipsum dolor sit amet"
    data-b="Lorem ipsum dolor sit amet"
    data-c="Lorem ipsum dolor sit amet"
  >
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div
    data-long-attribute-a="1"
    data-long-attribute-b="2"
    data-long-attribute-c="3"
  >
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <img src="/images/foo.png" />

  <img
    src="/images/foo.png"
    alt="bar"
  />

  <img
    src="/images/foo.png"
    alt="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
  />
</template>

================================================================================
`;

exports[`single-attribute-per-line.vue format 1`] = `
====================================options=====================================
parsers: ["vue"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<template>
  <div data-a="1">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div data-a="1" data-b="2" data-c="3">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div data-a="Lorem ipsum dolor sit amet" data-b="Lorem ipsum dolor sit amet" data-c="Lorem ipsum dolor sit amet">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div data-long-attribute-a="1" data-long-attribute-b="2" data-long-attribute-c="3">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <img src="/images/foo.png" />

  <img src="/images/foo.png" alt="bar" />

  <img src="/images/foo.png" alt="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
</template>

=====================================output=====================================
<template>
  <div data-a="1">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>

  <div data-a="1" data-b="2" data-c="3">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div
    data-a="Lorem ipsum dolor sit amet"
    data-b="Lorem ipsum dolor sit amet"
    data-c="Lorem ipsum dolor sit amet"
  >
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <div
    data-long-attribute-a="1"
    data-long-attribute-b="2"
    data-long-attribute-c="3"
  >
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  </div>

  <img src="/images/foo.png" />

  <img src="/images/foo.png" alt="bar" />

  <img
    src="/images/foo.png"
    alt="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
  />
</template>

================================================================================
`;

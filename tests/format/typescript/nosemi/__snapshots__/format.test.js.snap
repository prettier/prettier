// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`index-signature.ts - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
class LocalStorage implements Storage {
  [index: number]: string;
  [key: string]: any;
}

=====================================output=====================================
class LocalStorage implements Storage {
  [index: number]: string
  [key: string]: any
}

================================================================================
`;

exports[`interface.ts - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
interface Inline { x: string }

interface MultiLine {
    x: string;
    y: string;
}

interface InlineMultiple { x: string; y: string }

=====================================output=====================================
interface Inline {
  x: string
}

interface MultiLine {
  x: string
  y: string
}

interface InlineMultiple {
  x: string
  y: string
}

================================================================================
`;

exports[`type.ts - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
type A = {disabled?: boolean, error?: string}

const foo: {aasdf?: string; asdf?: number; foob?: string; zzz?: string; yyy: string}  = {}

=====================================output=====================================
type A = { disabled?: boolean; error?: string }

const foo: {
  aasdf?: string
  asdf?: number
  foob?: string
  zzz?: string
  yyy: string
} = {}

================================================================================
`;

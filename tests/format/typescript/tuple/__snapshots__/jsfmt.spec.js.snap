// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no-trailing-comma-after-rest.ts - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
type ValidateArgs = [
	{
		[key: string]: any;
	},
	string,
	string,
	...string[],
];

=====================================output=====================================
type ValidateArgs = [
  {
    [key: string]: any;
  },
  string,
  string,
  ...string[]
];

================================================================================
`;

exports[`no-trailing-comma-after-rest.ts - {"trailingComma":"none"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "none"
                                                                                | printWidth
=====================================input======================================
type ValidateArgs = [
	{
		[key: string]: any;
	},
	string,
	string,
	...string[],
];

=====================================output=====================================
type ValidateArgs = [
  {
    [key: string]: any;
  },
  string,
  string,
  ...string[]
];

================================================================================
`;

exports[`no-trailing-comma-after-rest.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
type ValidateArgs = [
	{
		[key: string]: any;
	},
	string,
	string,
	...string[],
];

=====================================output=====================================
type ValidateArgs = [
  {
    [key: string]: any;
  },
  string,
  string,
  ...string[]
];

================================================================================
`;

exports[`trailing-comma.ts - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
export interface ShopQueryResult {
  chic: boolean;
  location: number[];
  menus: Menu[];
  openingDays: number[];
  closingDays: [
    {
      from: string,
      to: string,
    }, // <== this one
  ];
  shop: string;
  distance: number;
}

=====================================output=====================================
export interface ShopQueryResult {
  chic: boolean;
  location: number[];
  menus: Menu[];
  openingDays: number[];
  closingDays: [
    {
      from: string;
      to: string;
    }, // <== this one
  ];
  shop: string;
  distance: number;
}

================================================================================
`;

exports[`trailing-comma.ts - {"trailingComma":"none"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "none"
                                                                                | printWidth
=====================================input======================================
export interface ShopQueryResult {
  chic: boolean;
  location: number[];
  menus: Menu[];
  openingDays: number[];
  closingDays: [
    {
      from: string,
      to: string,
    }, // <== this one
  ];
  shop: string;
  distance: number;
}

=====================================output=====================================
export interface ShopQueryResult {
  chic: boolean;
  location: number[];
  menus: Menu[];
  openingDays: number[];
  closingDays: [
    {
      from: string;
      to: string;
    } // <== this one
  ];
  shop: string;
  distance: number;
}

================================================================================
`;

exports[`trailing-comma.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
export interface ShopQueryResult {
  chic: boolean;
  location: number[];
  menus: Menu[];
  openingDays: number[];
  closingDays: [
    {
      from: string,
      to: string,
    }, // <== this one
  ];
  shop: string;
  distance: number;
}

=====================================output=====================================
export interface ShopQueryResult {
  chic: boolean;
  location: number[];
  menus: Menu[];
  openingDays: number[];
  closingDays: [
    {
      from: string;
      to: string;
    } // <== this one
  ];
  shop: string;
  distance: number;
}

================================================================================
`;

exports[`tuple.ts - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================

export type SCMRawResource = [
	number /*handle*/,
	string /*resourceUri*/,
	modes.Command /*command*/,
	string[] /*icons: light, dark*/,
	boolean /*strike through*/,
	boolean /*faded*/
];

=====================================output=====================================
export type SCMRawResource = [
  number /*handle*/,
  string /*resourceUri*/,
  modes.Command /*command*/,
  string[] /*icons: light, dark*/,
  boolean /*strike through*/,
  boolean /*faded*/,
];

================================================================================
`;

exports[`tuple.ts - {"trailingComma":"none"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "none"
                                                                                | printWidth
=====================================input======================================

export type SCMRawResource = [
	number /*handle*/,
	string /*resourceUri*/,
	modes.Command /*command*/,
	string[] /*icons: light, dark*/,
	boolean /*strike through*/,
	boolean /*faded*/
];

=====================================output=====================================
export type SCMRawResource = [
  number /*handle*/,
  string /*resourceUri*/,
  modes.Command /*command*/,
  string[] /*icons: light, dark*/,
  boolean /*strike through*/,
  boolean /*faded*/
];

================================================================================
`;

exports[`tuple.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================

export type SCMRawResource = [
	number /*handle*/,
	string /*resourceUri*/,
	modes.Command /*command*/,
	string[] /*icons: light, dark*/,
	boolean /*strike through*/,
	boolean /*faded*/
];

=====================================output=====================================
export type SCMRawResource = [
  number /*handle*/,
  string /*resourceUri*/,
  modes.Command /*command*/,
  string[] /*icons: light, dark*/,
  boolean /*strike through*/,
  boolean /*faded*/
];

================================================================================
`;

exports[`tuple-labeled.ts - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// https://github.com/babel/babel/pull/11754

type T = [x: A, y?: B, ...z: C];

type T = [A, y: B];

let x: [A: string, ...B: number[]]

type T = [foo: string, bar?: number];

type T = [x?: A, y: B];

type T = [x: A, ...B];

type T = [...B, x: A];

=====================================output=====================================
// https://github.com/babel/babel/pull/11754

type T = [x: A, y?: B, ...z: C];

type T = [A, y: B];

let x: [A: string, ...B: number[]];

type T = [foo: string, bar?: number];

type T = [x?: A, y: B];

type T = [x: A, ...B];

type T = [...B, x: A];

================================================================================
`;

exports[`tuple-labeled.ts - {"trailingComma":"none"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "none"
                                                                                | printWidth
=====================================input======================================
// https://github.com/babel/babel/pull/11754

type T = [x: A, y?: B, ...z: C];

type T = [A, y: B];

let x: [A: string, ...B: number[]]

type T = [foo: string, bar?: number];

type T = [x?: A, y: B];

type T = [x: A, ...B];

type T = [...B, x: A];

=====================================output=====================================
// https://github.com/babel/babel/pull/11754

type T = [x: A, y?: B, ...z: C];

type T = [A, y: B];

let x: [A: string, ...B: number[]];

type T = [foo: string, bar?: number];

type T = [x?: A, y: B];

type T = [x: A, ...B];

type T = [...B, x: A];

================================================================================
`;

exports[`tuple-labeled.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// https://github.com/babel/babel/pull/11754

type T = [x: A, y?: B, ...z: C];

type T = [A, y: B];

let x: [A: string, ...B: number[]]

type T = [foo: string, bar?: number];

type T = [x?: A, y: B];

type T = [x: A, ...B];

type T = [...B, x: A];

=====================================output=====================================
// https://github.com/babel/babel/pull/11754

type T = [x: A, y?: B, ...z: C];

type T = [A, y: B];

let x: [A: string, ...B: number[]];

type T = [foo: string, bar?: number];

type T = [x?: A, y: B];

type T = [x: A, ...B];

type T = [...B, x: A];

================================================================================
`;

exports[`tuple-rest-not-last.ts - {"trailingComma":"all"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "all"
                                                                                | printWidth
=====================================input======================================
// https://github.com/babel/babel/pull/11753

let x: [...[number, string], string]

=====================================output=====================================
// https://github.com/babel/babel/pull/11753

let x: [...[number, string], string];

================================================================================
`;

exports[`tuple-rest-not-last.ts - {"trailingComma":"none"} format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
trailingComma: "none"
                                                                                | printWidth
=====================================input======================================
// https://github.com/babel/babel/pull/11753

let x: [...[number, string], string]

=====================================output=====================================
// https://github.com/babel/babel/pull/11753

let x: [...[number, string], string];

================================================================================
`;

exports[`tuple-rest-not-last.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// https://github.com/babel/babel/pull/11753

let x: [...[number, string], string]

=====================================output=====================================
// https://github.com/babel/babel/pull/11753

let x: [...[number, string], string];

================================================================================
`;

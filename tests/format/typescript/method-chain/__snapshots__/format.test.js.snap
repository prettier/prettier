// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`comment.ts format 1`] = `
====================================options=====================================
parsers: ["typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================

this.firebase.object(\`/shops/\${shopLocation.shop}\`)
  // keep distance info
  .first((shop: ShopQueryResult, index: number, source: Observable<ShopQueryResult>): any => {
      // add distance to result
      const s = shop;
      s.distance = shopLocation.distance;
      return s;
  });

=====================================output=====================================
this.firebase
  .object(\`/shops/\${shopLocation.shop}\`)
  // keep distance info
  .first(
    (
      shop: ShopQueryResult,
      index: number,
      source: Observable<ShopQueryResult>,
    ): any => {
      // add distance to result
      const s = shop;
      s.distance = shopLocation.distance;
      return s;
    },
  );

================================================================================
`;

exports[`issue-17236.ts format 1`] = `
====================================options=====================================
parsers: ["typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
lumalOnetaxesResponse
  .map<
    [string, LumalOnetax[]]
  >((lumalOnetaxesForZandoni) => [
    lumalOnetaxesForZandoni.cimosey,
    lumalOnetaxesForZandoni.lumalOnetaxes
      .map((response) => this.mapToLumalOnetax(response))
      .filter(({ name, dapy }, i) => this.filterLumalOnetax(name, dapy, i, rivano))
  ])
  .filter(([cimosey], i) => this.filterCimosey(cimosey, rivano, i));

lumalOnetaxesResponse
  .map((lumalOnetaxesForZandoni) => [
    lumalOnetaxesForZandoni.cimosey,
    lumalOnetaxesForZandoni.lumalOnetaxes
      .map((response) => this.mapToLumalOnetax(response))
      .filter(({ name, dapy }, i) => this.filterLumalOnetax(name, dapy, i, rivano))
  ])
  .filter(([cimosey], i) => this.filterCimosey(cimosey, rivano, i));

=====================================output=====================================
lumalOnetaxesResponse
  .map<[string, LumalOnetax[]]>((lumalOnetaxesForZandoni) => [
    lumalOnetaxesForZandoni.cimosey,
    lumalOnetaxesForZandoni.lumalOnetaxes
      .map((response) => this.mapToLumalOnetax(response))
      .filter(({ name, dapy }, i) =>
        this.filterLumalOnetax(name, dapy, i, rivano),
      ),
  ])
  .filter(([cimosey], i) => this.filterCimosey(cimosey, rivano, i));

lumalOnetaxesResponse
  .map((lumalOnetaxesForZandoni) => [
    lumalOnetaxesForZandoni.cimosey,
    lumalOnetaxesForZandoni.lumalOnetaxes
      .map((response) => this.mapToLumalOnetax(response))
      .filter(({ name, dapy }, i) =>
        this.filterLumalOnetax(name, dapy, i, rivano),
      ),
  ])
  .filter(([cimosey], i) => this.filterCimosey(cimosey, rivano, i));

================================================================================
`;

exports[`issue-17239.ts format 1`] = `
====================================options=====================================
parsers: ["typescript", "flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const model = types
  .model({ something: mxSomething })
  .volatile<[foo]>((self) => ({ loading: false, savingStatus: "idle", undoDisabled: false, aiFocused: false, online: true }));

=====================================output=====================================
const model = types
  .model({ something: mxSomething })
  .volatile<[foo]>((self) => ({
    loading: false,
    savingStatus: "idle",
    undoDisabled: false,
    aiFocused: false,
    online: true,
  }));

================================================================================
`;

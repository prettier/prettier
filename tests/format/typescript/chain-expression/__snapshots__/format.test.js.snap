// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`call-expression.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// Member expressions
(a?.b)!   ();
(a?.b!)   ();
(a!?.b)   ();
(a.b?.c)!   ();
(a.b?.c!)   ();
(a.b!?.c)   ();
(a!.b?.c)   ();
(a?.b.c)!   ();
(a?.b.c!)   ();
(a?.b!.c)   ();
(a!?.b.c)   ();
(a[b?.c])!   ();
(a[b?.c]!)   ();
(a[b?.c!])   ();
(a[b!?.c])   ();
((a?.b).c)!   ();
((a?.b).c!)   ();
// FIXME: ((a?.b!).c)   ();
((a!?.b).c)   ();
(a[b?.()])!   ();
(a[b?.()]!)   ();
(a[b?.()!])   ();
(a[b!?.()])   ();
(a![b?.()])   ();
((a?.b).c)!   ();
((a?.b).c!)   ();
// FIXME: ((a?.b)!.c)   ();
// FIXME: ((a?.b!).c)   ();
((a!?.b).c)   ();
((a?.()).b)!   ();
((a?.()).b!)   ();
((a?.())!.b)   ();
((a?.()!).b)   ();
((a!?.()).b)   ();

// Call expressions
(a?.())!   ();
(a?.()!)   ();
(a!?.())   ();
(a.b.c?.())!   ();
(a.b.c?.()!)   ();
(a.b.c!?.())   ();
(a.b?.c())!   ();
(a.b?.c()!)   ();
(a.b!?.c())   ();
(a?.b.c())!   ();
(a?.b.c()!)   ();
(a?.b!.c())   ();
(a(b?.c))!   ();
(a(b?.c)!)   ();
(a(b?.c!))   ();
((a?.b)())!   ();
((a?.b)()!)   ();
((a?.b)!())   ();
((a?.b!)())   ();
((a?.())())!   ();
((a?.())()!)   ();
((a?.())!())   ();
((a?.()!)())   ();
((a!?.())())   ();

// Not \`.callee\`
foo((a?.b)!)

=====================================output=====================================
// Member expressions
(a?.b)!();
(a?.b)!();
(a!?.b)();
(a.b?.c)!();
(a.b?.c)!();
(a.b!?.c)();
(a!.b?.c)();
(a?.b.c)!();
(a?.b.c)!();
(a?.b!.c)();
(a!?.b.c)();
a[b?.c]!();
a[b?.c]!();
a[b?.c!]();
a[b!?.c]();
(a?.b).c!();
(a?.b).c!();
// FIXME: ((a?.b!).c)   ();
(a!?.b).c();
a[b?.()]!();
a[b?.()]!();
a[b?.()!]();
a[b!?.()]();
a![b?.()]();
(a?.b).c!();
(a?.b).c!();
// FIXME: ((a?.b)!.c)   ();
// FIXME: ((a?.b!).c)   ();
(a!?.b).c();
(a?.()).b!();
(a?.()).b!();
(a?.())!.b();
(a?.())!.b();
(a!?.()).b();

// Call expressions
(a?.())!();
(a?.())!();
(a!?.())();
(a.b.c?.())!();
(a.b.c?.())!();
(a.b.c!?.())();
(a.b?.c())!();
(a.b?.c())!();
(a.b!?.c())();
(a?.b.c())!();
(a?.b.c())!();
(a?.b!.c())();
a(b?.c)!();
a(b?.c)!();
a(b?.c!)();
(a?.b)()!();
(a?.b)()!();
(a?.b)!()();
(a?.b)!()();
(a?.())()!();
(a?.())()!();
(a?.())!()();
(a?.())!()();
(a!?.())()();

// Not \`.callee\`
foo(a?.b!);

================================================================================
`;

exports[`member-expression.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// Member expressions
(a?.b)!   .foo;
(a?.b!)   .foo;
(a!?.b)   .foo;
(a.b?.c)!   .foo;
(a.b?.c!)   .foo;
(a.b!?.c)   .foo;
(a!.b?.c)   .foo;
(a?.b.c)!   .foo;
(a?.b.c!)   .foo;
(a?.b!.c)   .foo;
(a!?.b.c)   .foo;
(a[b?.c])!   .foo;
(a[b?.c]!)   .foo;
(a[b?.c!])   .foo;
(a[b!?.c])   .foo;
((a?.b).c)!   .foo;
((a?.b).c!)   .foo;
((a?.b!).c)   .foo;
((a!?.b).c)   .foo;
(a[b?.()])!   .foo;
(a[b?.()]!)   .foo;
(a[b?.()!])   .foo;
(a[b!?.()])   .foo;
(a![b?.()])   .foo;
((a?.b).c)!   .foo;
((a?.b).c!)   .foo;
((a?.b)!.c)   .foo;
((a?.b!).c)   .foo;
((a!?.b).c)   .foo;
((a?.()).b)!   .foo;
((a?.()).b!)   .foo;
((a?.())!.b)   .foo;
((a?.()!).b)   .foo;
((a!?.()).b)   .foo;

// Call expressions
(a?.())!   .foo;
(a?.()!)   .foo;
(a!?.())   .foo;
(a.b.c?.())!   .foo;
(a.b.c?.()!)   .foo;
(a.b.c!?.())   .foo;
(a.b?.c())!   .foo;
(a.b?.c()!)   .foo;
(a.b!?.c())   .foo;
(a?.b.c())!   .foo;
(a?.b.c()!)   .foo;
(a?.b!.c())   .foo;
(a(b?.c))!   .foo;
(a(b?.c)!)   .foo;
(a(b?.c!))   .foo;
((a?.b)())!   .foo;
((a?.b)()!)   .foo;
((a?.b)!())   .foo;
((a?.b!)())   .foo;
((a?.())())!   .foo;
((a?.())()!)   .foo;
((a?.())!())   .foo;
((a?.()!)())   .foo;
((a!?.())())   .foo;


// Not \`.object\`
_[a?.b!]

// Computed
(a?.b!)   [foo]

=====================================output=====================================
// Member expressions
(a?.b)!.foo;
(a?.b)!.foo;
(a!?.b).foo;
(a.b?.c)!.foo;
(a.b?.c)!.foo;
(a.b!?.c).foo;
(a!.b?.c).foo;
(a?.b.c)!.foo;
(a?.b.c)!.foo;
(a?.b!.c).foo;
(a!?.b.c).foo;
a[b?.c]!.foo;
a[b?.c]!.foo;
a[b?.c!].foo;
a[b!?.c].foo;
(a?.b).c!.foo;
(a?.b).c!.foo;
(a?.b)!.c.foo;
(a!?.b).c.foo;
a[b?.()]!.foo;
a[b?.()]!.foo;
a[b?.()!].foo;
a[b!?.()].foo;
a![b?.()].foo;
(a?.b).c!.foo;
(a?.b).c!.foo;
(a?.b)!.c.foo;
(a?.b)!.c.foo;
(a!?.b).c.foo;
(a?.()).b!.foo;
(a?.()).b!.foo;
(a?.())!.b.foo;
(a?.())!.b.foo;
(a!?.()).b.foo;

// Call expressions
(a?.())!.foo;
(a?.())!.foo;
(a!?.()).foo;
(a.b.c?.())!.foo;
(a.b.c?.())!.foo;
(a.b.c!?.()).foo;
(a.b?.c())!.foo;
(a.b?.c())!.foo;
(a.b!?.c()).foo;
(a?.b.c())!.foo;
(a?.b.c())!.foo;
(a?.b!.c()).foo;
a(b?.c)!.foo;
a(b?.c)!.foo;
a(b?.c!).foo;
(a?.b)()!.foo;
(a?.b)()!.foo;
(a?.b)!().foo;
(a?.b)!().foo;
(a?.())()!.foo;
(a?.())()!.foo;
(a?.())!().foo;
(a?.())!().foo;
(a!?.())().foo;

// Not \`.object\`
_[a?.b!](
  // Computed
  a?.b!,
)[foo];

================================================================================
`;

exports[`new-expression.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// Member expressions
// FIXME: new   (a?.b)!   ();
// FIXME: new   (a?.b!)   ();
new   (a!?.b)   ();
// FIXME: new   (a.b?.c)!   ();
// FIXME: new   (a.b?.c!)   ();
new   (a.b!?.c)   ();
new   (a!.b?.c)   ();
// FIXME: new   (a?.b.c)!   ();
// FIXME: new   (a?.b.c!)   ();
new   (a?.b!.c)   ();
new   (a!?.b.c)   ();
new   (a[b?.c])!   ();
new   (a[b?.c]!)   ();
new   (a[b?.c!])   ();
new   (a[b!?.c])   ();
new   ((a?.b).c)!   ();
new   ((a?.b).c!)   ();
new   ((a?.b!).c)   ();
new   ((a!?.b).c)   ();
new   (a[b?.()])!   ();
new   (a[b?.()]!)   ();
new   (a[b?.()!])   ();
new   (a[b!?.()])   ();
new   (a![b?.()])   ();
new   ((a?.b).c)!   ();
new   ((a?.b).c!)   ();
new   ((a?.b)!.c)   ();
new   ((a?.b!).c)   ();
new   ((a!?.b).c)   ();
// FIXME: new   ((a?.()).b)!   ();
// FIXME: new   ((a?.()).b!)   ();
// FIXME: new   ((a?.())!.b)   ();
// FIXME: new   ((a?.()!).b)   ();
// FIXME: new   ((a!?.()).b)   ();

// Call expressions
// FIXME: new   (a?.())!   ();
// FIXME: new   (a?.()!)   ();
new   (a!?.())   ();
// FIXME: new   (a.b.c?.())!   ();
// FIXME: new   (a.b.c?.()!)   ();
new   (a.b.c!?.())   ();
// FIXME: new   (a.b?.c())!   ();
// FIXME: new   (a.b?.c()!)   ();
new   (a.b!?.c())   ();
// FIXME: new   (a?.b.c())!   ();
// FIXME: new   (a?.b.c()!)   ();
new   (a?.b!.c())   ();
new   (a(b?.c))!   ();
new   (a(b?.c)!)   ();
new   (a(b?.c!))   ();
new   ((a?.b)())!   ();
new   ((a?.b)()!)   ();
new   ((a?.b)!())   ();
new   ((a?.b!)())   ();
new   ((a?.())())!   ();
new   ((a?.())()!)   ();
new   ((a?.())!())   ();
new   ((a?.()!)())   ();
new   ((a!?.())())   ();

// Not \`.callee\`
new Foo(a?.b!)

=====================================output=====================================
// Member expressions
// FIXME: new   (a?.b)!   ();
// FIXME: new   (a?.b!)   ();
new (a!?.b)();
// FIXME: new   (a.b?.c)!   ();
// FIXME: new   (a.b?.c!)   ();
new (a.b!?.c)();
new (a!.b?.c)();
// FIXME: new   (a?.b.c)!   ();
// FIXME: new   (a?.b.c!)   ();
new (a?.b!.c)();
new (a!?.b.c)();
new a[b?.c]!();
new a[b?.c]!();
new a[b?.c!]();
new a[b!?.c]();
new (a?.b).c!();
new (a?.b).c!();
new (a?.b)!.c();
new (a!?.b).c();
new a[b?.()]!();
new a[b?.()]!();
new a[b?.()!]();
new a[b!?.()]();
new a![b?.()]();
new (a?.b).c!();
new (a?.b).c!();
new (a?.b)!.c();
new (a?.b)!.c();
new (a!?.b).c();
// FIXME: new   ((a?.()).b)!   ();
// FIXME: new   ((a?.()).b!)   ();
// FIXME: new   ((a?.())!.b)   ();
// FIXME: new   ((a?.()!).b)   ();
// FIXME: new   ((a!?.()).b)   ();

// Call expressions
// FIXME: new   (a?.())!   ();
// FIXME: new   (a?.()!)   ();
new (a!?.())();
// FIXME: new   (a.b.c?.())!   ();
// FIXME: new   (a.b.c?.()!)   ();
new (a.b.c!?.())();
// FIXME: new   (a.b?.c())!   ();
// FIXME: new   (a.b?.c()!)   ();
new (a.b!?.c())();
// FIXME: new   (a?.b.c())!   ();
// FIXME: new   (a?.b.c()!)   ();
new (a?.b!.c())();
new (a(b?.c)!)();
new (a(b?.c)!)();
new (a(b?.c!))();
new ((a?.b)()!)();
new ((a?.b)()!)();
new ((a?.b)!())();
new ((a?.b)!())();
new ((a?.())()!)();
new ((a?.())()!)();
new ((a?.())!())();
new ((a?.())!())();
new ((a!?.())())();

// Not \`.callee\`
new Foo(a?.b!);

================================================================================
`;

exports[`tagged-template-literals.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
// Member expressions
(a?.b)!   \`\`;
(a?.b!)   \`\`;
(a!?.b)   \`\`;
(a.b?.c)!   \`\`;
(a.b?.c!)   \`\`;
(a.b!?.c)   \`\`;
(a!.b?.c)   \`\`;
(a?.b.c)!   \`\`;
(a?.b.c!)   \`\`;
(a?.b!.c)   \`\`;
(a!?.b.c)   \`\`;
(a[b?.c])!   \`\`;
(a[b?.c]!)   \`\`;
(a[b?.c!])   \`\`;
(a[b!?.c])   \`\`;
((a?.b).c)!   \`\`;
((a?.b).c!)   \`\`;
((a?.b!).c)   \`\`;
((a!?.b).c)   \`\`;
(a[b?.()])!   \`\`;
(a[b?.()]!)   \`\`;
(a[b?.()!])   \`\`;
(a[b!?.()])   \`\`;
(a![b?.()])   \`\`;
((a?.b).c)!   \`\`;
((a?.b).c!)   \`\`;
((a?.b)!.c)   \`\`;
((a?.b!).c)   \`\`;
((a!?.b).c)   \`\`;
((a?.()).b)!   \`\`;
((a?.()).b!)   \`\`;
((a?.())!.b)   \`\`;
((a?.()!).b)   \`\`;
((a!?.()).b)   \`\`;

// Call expressions
(a?.())!   \`\`;
(a?.()!)   \`\`;
(a!?.())   \`\`;
(a.b.c?.())!   \`\`;
(a.b.c?.()!)   \`\`;
(a.b.c!?.())   \`\`;
(a.b?.c())!   \`\`;
(a.b?.c()!)   \`\`;
(a.b!?.c())   \`\`;
(a?.b.c())!   \`\`;
(a?.b.c()!)   \`\`;
(a?.b!.c())   \`\`;
(a(b?.c))!   \`\`;
(a(b?.c)!)   \`\`;
(a(b?.c!))   \`\`;
((a?.b)())!   \`\`;
((a?.b)()!)   \`\`;
((a?.b)!())   \`\`;
((a?.b!)())   \`\`;
((a?.())())!   \`\`;
((a?.())()!)   \`\`;
((a?.())!())   \`\`;
((a?.()!)())   \`\`;
((a!?.())())   \`\`;

=====================================output=====================================
// Member expressions
(a?.b)!\`\`;
(a?.b)!\`\`;
(a!?.b)\`\`;
(a.b?.c)!\`\`;
(a.b?.c)!\`\`;
(a.b!?.c)\`\`;
(a!.b?.c)\`\`;
(a?.b.c)!\`\`;
(a?.b.c)!\`\`;
(a?.b!.c)\`\`;
(a!?.b.c)\`\`;
a[b?.c]!\`\`;
a[b?.c]!\`\`;
a[b?.c!]\`\`;
a[b!?.c]\`\`;
(a?.b).c!\`\`;
(a?.b).c!\`\`;
(a?.b)!.c\`\`;
(a!?.b).c\`\`;
a[b?.()]!\`\`;
a[b?.()]!\`\`;
a[b?.()!]\`\`;
a[b!?.()]\`\`;
a![b?.()]\`\`;
(a?.b).c!\`\`;
(a?.b).c!\`\`;
(a?.b)!.c\`\`;
(a?.b)!.c\`\`;
(a!?.b).c\`\`;
(a?.()).b!\`\`;
(a?.()).b!\`\`;
(a?.())!.b\`\`;
(a?.())!.b\`\`;
(a!?.()).b\`\`;

// Call expressions
(a?.())!\`\`;
(a?.())!\`\`;
(a!?.())\`\`;
(a.b.c?.())!\`\`;
(a.b.c?.())!\`\`;
(a.b.c!?.())\`\`;
(a.b?.c())!\`\`;
(a.b?.c())!\`\`;
(a.b!?.c())\`\`;
(a?.b.c())!\`\`;
(a?.b.c())!\`\`;
(a?.b!.c())\`\`;
a(b?.c)!\`\`;
a(b?.c)!\`\`;
a(b?.c!)\`\`;
(a?.b)()!\`\`;
(a?.b)()!\`\`;
(a?.b)!()\`\`;
(a?.b)!()\`\`;
(a?.())()!\`\`;
(a?.())()!\`\`;
(a?.())!()\`\`;
(a?.())!()\`\`;
(a!?.())()\`\`;

================================================================================
`;

exports[`test.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
(a?.b!).c;
(a?.()!).b;
(a?.b)!.c;
(a?.())!.b;

=====================================output=====================================
(a?.b)!.c;
(a?.())!.b;
(a?.b)!.c;
(a?.())!.b;

================================================================================
`;

exports[`test2.ts format 1`] = `
====================================options=====================================
parsers: ["typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
{{
    const rotation1 = getTransformHandles(arrow, h.state.zoom, 'mouse')
      .rotation!;
    const rotation2 = getTransformHandles(arrow, h.state.zoom, 'mouse')
      .rotation;
    const rotation3 = getTransformHandles(arrow, h.state.zoom, 'mouse')
      ?.rotation;
}}

=====================================output=====================================
{
  {
    const rotation1 = getTransformHandles(
      arrow,
      h.state.zoom,
      "mouse",
    ).rotation!;
    const rotation2 = getTransformHandles(
      arrow,
      h.state.zoom,
      "mouse",
    ).rotation;
    const rotation3 = getTransformHandles(
      arrow,
      h.state.zoom,
      "mouse",
    )?.rotation;
  }
}

================================================================================
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ignore.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
An ignore comment (HTML):

<!-- prettier-ignore -->

\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

An ignore comment (ES):

{/* prettier-ignore */}

\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

No comment:

\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

=====================================output=====================================
An ignore comment (HTML):

<!-- prettier-ignore -->
\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

An ignore comment (ES):

{/* prettier-ignore */}
\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

No comment:

\`\`\`js
foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
)
\`\`\`

================================================================================
`;

exports[`ignore.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
An ignore comment (HTML):

<!-- prettier-ignore -->

\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

An ignore comment (ES):

{/* prettier-ignore */}

\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

No comment:

\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

=====================================output=====================================
An ignore comment (HTML):

<!-- prettier-ignore -->
\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

An ignore comment (ES):

{/* prettier-ignore */}
\`\`\`js
foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
\`\`\`

No comment:

\`\`\`js
foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
);
\`\`\`

================================================================================
`;

exports[`import-export.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
import D from 'd'
import {A,B,C}    from "hello-world"
import {AAAAAAAAAAAAAAAAAAAAAAAA, BBBBBBBBBBBBBBBBBBBBBB, CCCCCCCCCCCCCCCCCCCCCCC}   from  'xyz';

---

import D from 'd'


import {A,B,C}    from "hello-world"


import {AAAAAAAAAAAAAAAAAAAAAAAA, BBBBBBBBBBBBBBBBBBBBBB, CCCCCCCCCCCCCCCCCCCCCCC}   from  'xyz';

---

export const meta = {
authors: [fred, sue],
layout: Layout
}

export default () =>
  <Doc     components={{
        h1: ui.Heading,
         p:    ui.Text,
      code:     ui.Code
         }}
      />

---

export const a = 1;
export const b = 1;

=====================================output=====================================
import D from "d"
import { A, B, C } from "hello-world"
import {
  AAAAAAAAAAAAAAAAAAAAAAAA,
  BBBBBBBBBBBBBBBBBBBBBB,
  CCCCCCCCCCCCCCCCCCCCCCC,
} from "xyz"

---

import D from "d"

import { A, B, C } from "hello-world"

import {
  AAAAAAAAAAAAAAAAAAAAAAAA,
  BBBBBBBBBBBBBBBBBBBBBB,
  CCCCCCCCCCCCCCCCCCCCCCC,
} from "xyz"

---

export const meta = {
  authors: [fred, sue],
  layout: Layout,
}

export default () => (
  <Doc
    components={{
      h1: ui.Heading,
      p: ui.Text,
      code: ui.Code,
    }}
  />
)

---

export const a = 1
export const b = 1

================================================================================
`;

exports[`import-export.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
import D from 'd'
import {A,B,C}    from "hello-world"
import {AAAAAAAAAAAAAAAAAAAAAAAA, BBBBBBBBBBBBBBBBBBBBBB, CCCCCCCCCCCCCCCCCCCCCCC}   from  'xyz';

---

import D from 'd'


import {A,B,C}    from "hello-world"


import {AAAAAAAAAAAAAAAAAAAAAAAA, BBBBBBBBBBBBBBBBBBBBBB, CCCCCCCCCCCCCCCCCCCCCCC}   from  'xyz';

---

export const meta = {
authors: [fred, sue],
layout: Layout
}

export default () =>
  <Doc     components={{
        h1: ui.Heading,
         p:    ui.Text,
      code:     ui.Code
         }}
      />

---

export const a = 1;
export const b = 1;

=====================================output=====================================
import D from "d";
import { A, B, C } from "hello-world";
import {
  AAAAAAAAAAAAAAAAAAAAAAAA,
  BBBBBBBBBBBBBBBBBBBBBB,
  CCCCCCCCCCCCCCCCCCCCCCC,
} from "xyz";

---

import D from "d";

import { A, B, C } from "hello-world";

import {
  AAAAAAAAAAAAAAAAAAAAAAAA,
  BBBBBBBBBBBBBBBBBBBBBB,
  CCCCCCCCCCCCCCCCCCCCCCC,
} from "xyz";

---

export const meta = {
  authors: [fred, sue],
  layout: Layout,
};

export default () => (
  <Doc
    components={{
      h1: ui.Heading,
      p: ui.Text,
      code: ui.Code,
    }}
  />
);

---

export const a = 1;
export const b = 1;

================================================================================
`;

exports[`inline-html.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
This is an example of a component _being used in some italic markdown with some <Bolded />, 
and as you can see_ once you close the italics, it will break incorrectly when prettier formats it.

| Column 1 | Column 2 |
| -- | -- |
| **\`Row 1 Code\`** | Some text. |
| **<code>Row 2 Code</code>** | Some text. |
| **<InlineCode>Row 2 Code</InlineCode>** | Some text. |

=====================================output=====================================
This is an example of a component _being used in some italic markdown with some <Bolded />,
and as you can see_ once you close the italics, it will break incorrectly when prettier formats it.

| Column 1                                | Column 2   |
| --------------------------------------- | ---------- |
| **\`Row 1 Code\`**                        | Some text. |
| **<code>Row 2 Code</code>**             | Some text. |
| **<InlineCode>Row 2 Code</InlineCode>** | Some text. |

================================================================================
`;

exports[`inline-html.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
This is an example of a component _being used in some italic markdown with some <Bolded />, 
and as you can see_ once you close the italics, it will break incorrectly when prettier formats it.

| Column 1 | Column 2 |
| -- | -- |
| **\`Row 1 Code\`** | Some text. |
| **<code>Row 2 Code</code>** | Some text. |
| **<InlineCode>Row 2 Code</InlineCode>** | Some text. |

=====================================output=====================================
This is an example of a component _being used in some italic markdown with some <Bolded />,
and as you can see_ once you close the italics, it will break incorrectly when prettier formats it.

| Column 1                                | Column 2   |
| --------------------------------------- | ---------- |
| **\`Row 1 Code\`**                        | Some text. |
| **<code>Row 2 Code</code>**             | Some text. |
| **<InlineCode>Row 2 Code</InlineCode>** | Some text. |

================================================================================
`;

exports[`issue-9503.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
<ExternalLink href="http://example.com">Prettier</ExternalLink> is an opinionated-code-formatter-that-support-many-languages-and-integrate-with-most-editors

=====================================output=====================================
<ExternalLink href="http://example.com">Prettier</ExternalLink> is an
opinionated-code-formatter-that-support-many-languages-and-integrate-with-most-editors

================================================================================
`;

exports[`issue-9503.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<ExternalLink href="http://example.com">Prettier</ExternalLink> is an opinionated-code-formatter-that-support-many-languages-and-integrate-with-most-editors

=====================================output=====================================
<ExternalLink href="http://example.com">Prettier</ExternalLink> is an
opinionated-code-formatter-that-support-many-languages-and-integrate-with-most-editors

================================================================================
`;

exports[`jsx.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
<Heading hi='there'>Hello, world!
</Heading>

---

<Hello>
    test   <World />   test
</Hello>123

---

<Hello>
    test   <World />   test
</Hello>
<Hello>
    test   <World />   test
</Hello>123

---

<Hello>
    test   <World />   test
</Hello>       123
<Hello>
    test   <World />   test
</Hello>       234

---

<>
    test   <World        />   test
</>       123

---

| Column 1 | Column 2 |
|---|---|
| Text | <Hello>Text</Hello> |

---

A {/* JS-style comment */} comment.

{
  /* Another JS-style comment */
}

=====================================output=====================================
<Heading hi="there">Hello, world!</Heading>

---

<Hello>
  test <World /> test
</Hello>
123

---

<Hello>
  test <World /> test
</Hello>
<Hello>
  test <World /> test
</Hello>
123

---

<Hello>
  test <World /> test
</Hello> 123
<Hello>
  test <World /> test
</Hello> 234

---

<>
  test <World /> test
</> 123

---

| Column 1 | Column 2            |
| -------- | ------------------- |
| Text     | <Hello>Text</Hello> |

---

A {/* JS-style comment */} comment.

{/* Another JS-style comment */}

================================================================================
`;

exports[`jsx.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
<Heading hi='there'>Hello, world!
</Heading>

---

<Hello>
    test   <World />   test
</Hello>123

---

<Hello>
    test   <World />   test
</Hello>
<Hello>
    test   <World />   test
</Hello>123

---

<Hello>
    test   <World />   test
</Hello>       123
<Hello>
    test   <World />   test
</Hello>       234

---

<>
    test   <World        />   test
</>       123

---

| Column 1 | Column 2 |
|---|---|
| Text | <Hello>Text</Hello> |

---

A {/* JS-style comment */} comment.

{
  /* Another JS-style comment */
}

=====================================output=====================================
<Heading hi="there">Hello, world!</Heading>

---

<Hello>
  test <World /> test
</Hello>
123

---

<Hello>
  test <World /> test
</Hello>
<Hello>
  test <World /> test
</Hello>
123

---

<Hello>
  test <World /> test
</Hello> 123
<Hello>
  test <World /> test
</Hello> 234

---

<>
  test <World /> test
</> 123

---

| Column 1 | Column 2            |
| -------- | ------------------- |
| Text     | <Hello>Text</Hello> |

---

A {/* JS-style comment */} comment.

{/* Another JS-style comment */}

================================================================================
`;

exports[`jsx-codeblock.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
\`\`\`jsx
<div>foo</div>
\`\`\`

\`\`\`jsx
const a = 1;
<div>foo</div>;
\`\`\`

=====================================output=====================================
\`\`\`jsx
<div>foo</div>
\`\`\`

\`\`\`jsx
const a = 1
;<div>foo</div>
\`\`\`

================================================================================
`;

exports[`jsx-codeblock.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
\`\`\`jsx
<div>foo</div>
\`\`\`

\`\`\`jsx
const a = 1;
<div>foo</div>;
\`\`\`

=====================================output=====================================
\`\`\`jsx
<div>foo</div>
\`\`\`

\`\`\`jsx
const a = 1;
<div>foo</div>;
\`\`\`

================================================================================
`;

exports[`levels.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
import     {     Foo,  Bar } from     './Fixture'

# Hello,    world!

<Foo bg='red'>
   <div style={{   display:   'block'}   }>
      <Bar    >hi    </Bar>
       {  hello       }
       {     /* another comment */}
       </div>
</Foo>

asdfsdf <strong style={{fontWeight: 'bolder'}}>asdfasdf</strong>

<Foo/>
test

<ul>
      <li   >item    {' '} </li>
      <li/>
        </ul >


=====================================output=====================================
import { Foo, Bar } from "./Fixture"

# Hello, world!

<Foo bg="red">
  <div style={{ display: "block" }}>
    <Bar>hi </Bar>
    {hello}
    {/* another comment */}
  </div>
</Foo>

asdfsdf <strong style={{fontWeight: 'bolder'}}>asdfasdf</strong>

<Foo />
test

<ul>
  <li>item </li>
  <li />
</ul>

================================================================================
`;

exports[`levels.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
import     {     Foo,  Bar } from     './Fixture'

# Hello,    world!

<Foo bg='red'>
   <div style={{   display:   'block'}   }>
      <Bar    >hi    </Bar>
       {  hello       }
       {     /* another comment */}
       </div>
</Foo>

asdfsdf <strong style={{fontWeight: 'bolder'}}>asdfasdf</strong>

<Foo/>
test

<ul>
      <li   >item    {' '} </li>
      <li/>
        </ul >


=====================================output=====================================
import { Foo, Bar } from "./Fixture";

# Hello, world!

<Foo bg="red">
  <div style={{ display: "block" }}>
    <Bar>hi </Bar>
    {hello}
    {/* another comment */}
  </div>
</Foo>

asdfsdf <strong style={{fontWeight: 'bolder'}}>asdfasdf</strong>

<Foo />
test

<ul>
  <li>item </li>
  <li />
</ul>

================================================================================
`;

exports[`mixed.mdx - {"semi":false} format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
semi: false
                                                                                | printWidth
=====================================input======================================
import     {     Baz } from     './Fixture'
import { Buz  }   from './Fixture'

export  const   foo    = {
  hi:     \`Fudge \${Baz.displayName || 'Baz'}\`,
  authors: [
     'fred',
           'sally'
    ]
}

# Hello,    world!


 I'm an awesome   paragraph.

<!-- I'm a comment -->

<Foo bg='red'>
      <Bar    >hi    </Bar>
       {  hello       }
       {     /* another comment */}
</Foo>

\`\`\`
test codeblock
\`\`\`

\`\`\`js
module.exports = 'test'
\`\`\`

\`\`\`sh
npm i -g foo
\`\`\`

| Test  | Table   |
|    :---     | :----  |
|   Col1  | Col2    |

export   default     ({children   }) => < div>{    children}</div>

=====================================output=====================================
import { Baz } from "./Fixture"
import { Buz } from "./Fixture"

export const foo = {
  hi: \`Fudge \${Baz.displayName || "Baz"}\`,
  authors: ["fred", "sally"],
}

# Hello, world!

I'm an awesome paragraph.

<!-- I'm a comment -->

<Foo bg="red">
  <Bar>hi </Bar>
  {hello}
  {/* another comment */}
</Foo>

\`\`\`
test codeblock
\`\`\`

\`\`\`js
module.exports = "test"
\`\`\`

\`\`\`sh
npm i -g foo
\`\`\`

| Test | Table |
| :--- | :---- |
| Col1 | Col2  |

export default ({ children }) => <div>{children}</div>

================================================================================
`;

exports[`mixed.mdx format 1`] = `
====================================options=====================================
parsers: ["mdx"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
import     {     Baz } from     './Fixture'
import { Buz  }   from './Fixture'

export  const   foo    = {
  hi:     \`Fudge \${Baz.displayName || 'Baz'}\`,
  authors: [
     'fred',
           'sally'
    ]
}

# Hello,    world!


 I'm an awesome   paragraph.

<!-- I'm a comment -->

<Foo bg='red'>
      <Bar    >hi    </Bar>
       {  hello       }
       {     /* another comment */}
</Foo>

\`\`\`
test codeblock
\`\`\`

\`\`\`js
module.exports = 'test'
\`\`\`

\`\`\`sh
npm i -g foo
\`\`\`

| Test  | Table   |
|    :---     | :----  |
|   Col1  | Col2    |

export   default     ({children   }) => < div>{    children}</div>

=====================================output=====================================
import { Baz } from "./Fixture";
import { Buz } from "./Fixture";

export const foo = {
  hi: \`Fudge \${Baz.displayName || "Baz"}\`,
  authors: ["fred", "sally"],
};

# Hello, world!

I'm an awesome paragraph.

<!-- I'm a comment -->

<Foo bg="red">
  <Bar>hi </Bar>
  {hello}
  {/* another comment */}
</Foo>

\`\`\`
test codeblock
\`\`\`

\`\`\`js
module.exports = "test";
\`\`\`

\`\`\`sh
npm i -g foo
\`\`\`

| Test | Table |
| :--- | :---- |
| Col1 | Col2  |

export default ({ children }) => <div>{children}</div>;

================================================================================
`;

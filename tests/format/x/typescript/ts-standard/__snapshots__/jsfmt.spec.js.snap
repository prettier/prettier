// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correct.ts - {"yieldStarSpacing":true,"generatorStarSpacing":true,"spaceBeforeFunctionParen":true,"singleQuote":true,"jsxSingleQuote":true,"semi":false} format 1`] = `
====================================options=====================================
generatorStarSpacing: true
jsxSingleQuote: true
parsers: ["typescript"]
printWidth: 80
semi: false
singleQuote: true
spaceBeforeFunctionParen: true
yieldStarSpacing: true
                                                                                | printWidth
=====================================input======================================
function identity<T> (value: T): T {
  return value
}

interface Foo<T> {
  getter(value: T): T
}

class Example<T> implements Foo<T> {
  value: T
  getter (value: T): T {
    return this.value
  }
  set setter (value: T) {
    this.value = value
  }
}

=====================================output=====================================
function identity<T> (value: T): T {
  return value
}

interface Foo<T> {
  getter(value: T): T
}

class Example<T> implements Foo<T> {
  value: T
  getter (value: T): T {
    return this.value
  }
  set setter (value: T) {
    this.value = value
  }
}

================================================================================
`;

exports[`incorrect.ts - {"yieldStarSpacing":true,"generatorStarSpacing":true,"spaceBeforeFunctionParen":true,"singleQuote":true,"jsxSingleQuote":true,"semi":false} format 1`] = `
====================================options=====================================
generatorStarSpacing: true
jsxSingleQuote: true
parsers: ["typescript"]
printWidth: 80
semi: false
singleQuote: true
spaceBeforeFunctionParen: true
yieldStarSpacing: true
                                                                                | printWidth
=====================================input======================================
function identity <T>(value :T) :T {
  return value
}

interface Foo <T>{
  getter(value:T):T
}

class Example<T> implements Foo <T>{
  value:T;
  getter(value :T) :T {
    return this.value
  }
  set setter(value :T) {
    this.value = value
  }
}

=====================================output=====================================
function identity<T> (value: T): T {
  return value
}

interface Foo<T> {
  getter(value: T): T
}

class Example<T> implements Foo<T> {
  value: T
  getter (value: T): T {
    return this.value
  }
  set setter (value: T) {
    this.value = value
  }
}

================================================================================
`;

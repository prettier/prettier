// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`issue-10846.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const foo1 =
  call<{
    prop1: string;
    prop2: string;
    prop3: string;
  }>();

export const CallRecorderContext1 =
  createContext<{
    deleteRecording: (id: string) => void;
    deleteAll: () => void;
  } | null>(null);

export const CallRecorderContext2 = createContext<{
  deleteRecording: (id: string) => void;
  deleteAll: () => void;
} | null>(null, "useless");

const foo2 =
  call<Foooooo, Foooooo, Foooooo, Foooooo, Foooooo, Foooooo, Foooooo>();

const foo3 =
  call<
    | Foooooooooooo
    | Foooooooooooo
    | Foooooooooooo
    | Foooooooooooo
    | Foooooooooooo
  >();

const foo4 =
  call<
    Foooooooooooo &
      Foooooooooooo &
      Foooooooooooo &
      Foooooooooooo &
      Foooooooooooo
  >();

=====================================output=====================================
const foo1 = call<{
  prop1: string,
  prop2: string,
  prop3: string,
}>();

export const CallRecorderContext1 = createContext<{
  deleteRecording: (id: string) => void,
  deleteAll: () => void,
} | null>(null);

export const CallRecorderContext2 = createContext<{
  deleteRecording: (id: string) => void,
  deleteAll: () => void,
} | null>(null, "useless");

const foo2 = call<
  Foooooo,
  Foooooo,
  Foooooo,
  Foooooo,
  Foooooo,
  Foooooo,
  Foooooo,
>();

const foo3 = call<
  Foooooooooooo | Foooooooooooo | Foooooooooooo | Foooooooooooo | Foooooooooooo,
>();

const foo4 = call<
  Foooooooooooo & Foooooooooooo & Foooooooooooo & Foooooooooooo & Foooooooooooo,
>();

================================================================================
`;

exports[`issue-10850.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const map: Map<Function, Map<string | void, { value: UnloadedDescriptor }>> =
  new Map();

const map: Map<Function, FunctionFunctionFunctionFunctionffFunction> =
  new Map();

const map: Map<Function, Foo<S>> = new Map();

=====================================output=====================================
const map: Map<
  Function,
  Map<string | void, { value: UnloadedDescriptor }>,
> = new Map();

const map: Map<Function, FunctionFunctionFunctionFunctionffFunction> =
  new Map();

const map: Map<Function, Foo<S>> = new Map();

================================================================================
`;

exports[`issue-12413.js format 1`] = `
====================================options=====================================
parsers: ["flow"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
let emit =
  defineEmits<{ (event: "ready", canvas: HTMLCanvasElement): void; (event:"resize",canvas:HTMLCanvasElement):void; }>();

let abc =
  func<{a:2,b:3,d:78,e:9,f:8,g:7,h:6,i:5,j:4,k:3,l:2,m:1,n:0,o:9,p:8,q:7,r:6,s:5,t:4,u:3,v:2,w:1,x:0,y:9,z:8}>();

=====================================output=====================================
let emit = defineEmits<{
  (event: "ready", canvas: HTMLCanvasElement): void,
  (event: "resize", canvas: HTMLCanvasElement): void,
}>();

let abc = func<{
  a: 2,
  b: 3,
  d: 78,
  e: 9,
  f: 8,
  g: 7,
  h: 6,
  i: 5,
  j: 4,
  k: 3,
  l: 2,
  m: 1,
  n: 0,
  o: 9,
  p: 8,
  q: 7,
  r: 6,
  s: 5,
  t: 4,
  u: 3,
  v: 2,
  w: 1,
  x: 0,
  y: 9,
  z: 8,
}>();

================================================================================
`;

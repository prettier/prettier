const visitorKeys = {
  root: ["nodes", "frontMatter"],
  comment: [],
  rule: ["selector", "nodes"],
  decl: ["nodes", "expression"],
  "variable-declaration": ["expression"],
  atrule: ["params", "nodes"],
  list: ["nodes"],
  map: ["nodes"],
  "argument-list": ["nodes"],
  "parameter-list": ["nodes"],
  "import-list": ["nodes"],
  argument: ["value"],
  parameter: ["defaultValue"],
  "map-entry": ["key", "value"],
  parenthesized: ["inParens"],
  "binary-operation": ["left", "right"],
  string: [],
  "function-call": ["arguments"],
  "function-rule": ["parameters", "nodes"],
  "return-rule": ["returnExpression", "nodes"],
  "mixin-rule": ["parameters", "nodes"],
  "include-rule": ["arguments", "using", "nodes"],
  "content-rule": ["contentArguments", "nodes"],
  "import-rule": ["imports", "nodes"],
  "each-rule": ["eachExpression", "nodes"],
  "for-rule": ["fromExpression", "toExpression", "nodes"],
  "if-rule": ["ifCondition", "nodes"],
  "else-rule": ["elseCondition", "nodes"],
  "forward-rule": ["configuration"],
  "use-rule": ["configuration"],
  "warn-rule": ["warnExpression", "nodes"],
  "error-rule": ["errorExpression", "nodes"],
  "debug-rule": ["debugExpression", "nodes"],
  "while-rule": ["whileCondition", "nodes"],
  "static-import": ["staticUrl", "modifiers"],
  configuration: ["nodes"],
  "configured-variable": ["expression"],
  interpolation: ["nodes"],
  "interpolated-function-call": ["name", "arguments"],
  "unary-operation": ["operand"],
  unknown: [],
};

export default visitorKeys;
